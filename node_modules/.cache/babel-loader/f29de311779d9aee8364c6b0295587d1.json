{"ast":null,"code":"var _jsxFileName = \"/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Profile/MyPosts/MyPosts.jsx\";\nimport React, { useMemo } from 'react';\nimport cn from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form'; // validators\n\nimport { required, maxLengthCreator, minLengthCreator } from '../../../common/validators/validators'; // components\n\nimport { Textarea } from '../../../common/form-controls/form-controls';\nimport Post from './Post/Post'; // actions\n\nimport { addMessage } from '../../../../state/profile/actions';\nimport styles from './MyPosts.module.css';\nconst maxLength15 = maxLengthCreator(15);\nconst minLength2 = minLengthCreator(2);\n\nfunction formPosts(props) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: styles.form,\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"message\",\n    component: Textarea,\n    placeholder: \"your news\",\n    validate: [required, maxLength15, minLength2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"));\n}\n\nconst FormPostsRedux = reduxForm({\n  form: 'formPosts'\n})(formPosts);\n\nfunction MyPosts({\n  className\n}) {\n  const posts = useSelector(state => state.profile.postData);\n  const dispatch = useDispatch();\n  const postItems = useMemo(() => posts.map((p, i) => {\n    return /*#__PURE__*/React.createElement(Post, {\n      desc: p.desc,\n      likesCounter: p.likesCounter,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }\n    });\n  }), [posts]);\n\n  const sendMessage = value => {\n    dispatch(addMessage(value.message));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cn(styles.Root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"\\u041A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442\\u0430 MyPosts\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, postItems), /*#__PURE__*/React.createElement(FormPostsRedux, {\n    onSubmit: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default MyPosts;","map":{"version":3,"sources":["/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","useMemo","cn","useSelector","useDispatch","Field","reduxForm","required","maxLengthCreator","minLengthCreator","Textarea","Post","addMessage","styles","maxLength15","minLength2","formPosts","props","form","handleSubmit","button","FormPostsRedux","MyPosts","className","posts","state","profile","postData","dispatch","postItems","map","p","i","desc","likesCounter","sendMessage","value","message","Root","list"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC,C,CAEA;;AACA,SAASC,QAAT,EACIC,gBADJ,EAEIC,gBAFJ,QAGO,uCAHP,C,CAKA;;AACA,SAASC,QAAT,QAAyB,6CAAzB;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,mCAA3B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,MAAMC,WAAW,GAAGN,gBAAgB,CAAC,EAAD,CAApC;AACA,MAAMO,UAAU,GAAGN,gBAAgB,CAAC,CAAD,CAAnC;;AAEA,SAASO,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,sBACI;AAAM,IAAA,SAAS,EAAEJ,MAAM,CAACK,IAAxB;AAA8B,IAAA,QAAQ,EAAED,KAAK,CAACE,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AACI,IAAA,SAAS,EAAET,QADf;AAEI,IAAA,WAAW,EAAC,WAFhB;AAGI,IAAA,QAAQ,EAAE,CAACH,QAAD,EAAWO,WAAX,EAAwBC,UAAxB,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI;AAAQ,IAAA,SAAS,EAAEF,MAAM,CAACO,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFANJ,CADJ;AAUH;;AAED,MAAMC,cAAc,GAAGf,SAAS,CAAC;AAC7BY,EAAAA,IAAI,EAAE;AADuB,CAAD,CAAT,CAEpBF,SAFoB,CAAvB;;AAIA,SAASM,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAAgC;AAC5B,QAAMC,KAAK,GAAGrB,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,QAAxB,CAAzB;AACA,QAAMC,QAAQ,GAAGxB,WAAW,EAA5B;AAEA,QAAMyB,SAAS,GAAG5B,OAAO,CAAC,MACtBuB,KAAK,CAACM,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChB,wBAAO,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAED,CAAC,CAACE,IAAd;AAAoB,MAAA,YAAY,EAAEF,CAAC,CAACG,YAApC;AAAkD,MAAA,GAAG,EAAEF,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CADqB,EAIvB,CAACR,KAAD,CAJuB,CAAzB;;AAMA,QAAMW,WAAW,GAAIC,KAAD,IAAW;AAC3BR,IAAAA,QAAQ,CAAChB,UAAU,CAACwB,KAAK,CAACC,OAAP,CAAX,CAAR;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAEnC,EAAE,CAACW,MAAM,CAACyB,IAAR,EAAcf,SAAd,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EADJ,eAGI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAEV,MAAM,CAAC0B,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,SADL,CADJ,eAKI,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEM,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAHJ,CADJ;AAaH;;AAED,eAAeb,OAAf","sourcesContent":["\nimport React, { useMemo } from 'react';\nimport cn from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\n\n// validators\nimport { required,\n    maxLengthCreator,\n    minLengthCreator\n} from '../../../common/validators/validators';\n\n// components\nimport { Textarea } from '../../../common/form-controls/form-controls';\nimport Post from './Post/Post';\n\n// actions\nimport { addMessage } from '../../../../state/profile/actions';\n\nimport styles from './MyPosts.module.css';\n\nconst maxLength15 = maxLengthCreator(15);\nconst minLength2 = minLengthCreator(2);\n\nfunction formPosts(props) {\n    return (\n        <form className={styles.form} onSubmit={props.handleSubmit}>\n            <Field name=\"message\"\n                component={Textarea}\n                placeholder=\"your news\"\n                validate={[required, maxLength15, minLength2]} />\n\n            <button className={styles.button}>Опубликовать</button>\n        </form>\n    )\n}\n\nconst FormPostsRedux = reduxForm({\n    form: 'formPosts'\n})(formPosts);\n\nfunction MyPosts({ className }) {\n    const posts = useSelector(state => state.profile.postData);\n    const dispatch = useDispatch();\n\n    const postItems = useMemo(() =>\n        posts.map((p, i) => {\n            return <Post desc={p.desc} likesCounter={p.likesCounter} key={i} />\n        })\n    , [posts]);\n\n    const sendMessage = (value) => {\n        dispatch(addMessage(value.message));\n    }\n\n    return (\n        <div className={cn(styles.Root, className)}>\n            <h2>Компонента MyPosts</h2>\n\n            <div className=\"posts\">\n                <ul className={styles.list}>\n                    {postItems}\n                </ul>\n\n                <FormPostsRedux onSubmit={sendMessage} />\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts;\n"]},"metadata":{},"sourceType":"module"}