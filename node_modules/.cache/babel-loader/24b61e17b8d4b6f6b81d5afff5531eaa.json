{"ast":null,"code":"//  docs api\n//  https://social-network.samuraijs.com/docs\nimport * as axios from 'axios';\nimport { STYLE_CONSOLE } from '../constants/constants';\nconst instanceAxios = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  timeout: 1000,\n  withCredentials: true,\n  headers: {\n    \"API-KEY\": \"e6cfdfa9-e06f-48fb-8abd-0a53de2d8b83\"\n  }\n});\nexport const usersAPI = {\n  getUsers(currentPage, pageSize) {\n    return instanceAxios.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\n      return response.data;\n    });\n  },\n\n  addFriend(id) {\n    return instanceAxios.post(`follow/${id}`).then(response => {\n      return response.data;\n    });\n  },\n\n  deleteFriend(id) {\n    return instanceAxios.delete(`follow/${id}`).then(response => {\n      return response.data;\n    });\n  },\n\n  getProfile(userId) {\n    console.log('%cObsolete method! Please use profileAPI', STYLE_CONSOLE);\n    return profileAPI.getProfile(userId);\n  }\n\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    return instanceAxios.get(`profile/${userId}`).then(response => {\n      return response.data;\n    });\n  },\n\n  getUserStatus(userId) {\n    return instanceAxios.get(`profile/status/${userId}`);\n  },\n\n  updateStatus(status) {\n    return instanceAxios.put(`profile/status/`, {\n      status: status\n    });\n  }\n\n};\nexport const authMeAPI = {\n  getAuthMe() {\n    return instanceAxios.get('/auth/me').then(response => {\n      return response.data;\n    });\n  },\n\n  login(email, password, rememberMe) {\n    return instanceAxios.post('/auth/login', {\n      email: email,\n      password: password,\n      rememberMe: rememberMe\n    }).then(response => {\n      return response.data;\n    });\n  },\n\n  loginOut() {\n    return instanceAxios.delete('/auth/login').then(response => {\n      return response.data;\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/a17092425/Desktop/pet/it-kamasutra/src/api/api.js"],"names":["axios","STYLE_CONSOLE","instanceAxios","create","baseURL","timeout","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","addFriend","id","post","deleteFriend","delete","getProfile","userId","console","log","profileAPI","getUserStatus","updateStatus","status","put","authMeAPI","getAuthMe","login","email","password","rememberMe","loginOut"],"mappings":"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","sourcesContent":["//  docs api\n//  https://social-network.samuraijs.com/docs\n\nimport * as axios from 'axios';\nimport { STYLE_CONSOLE } from '../constants/constants';\n\nconst instanceAxios = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    timeout: 1000,\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": \"e6cfdfa9-e06f-48fb-8abd-0a53de2d8b83\"\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage, pageSize) {\n        return instanceAxios.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data\n            })\n    },\n    addFriend(id) {\n        return instanceAxios.post(`follow/${id}`)\n            .then(response => {\n                return response.data\n            })\n    },\n\n    deleteFriend(id) {\n        return instanceAxios.delete(`follow/${id}`)\n            .then(response => {\n                return response.data\n            })\n    },\n    getProfile(userId) {\n        console.log('%cObsolete method! Please use profileAPI', STYLE_CONSOLE);\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instanceAxios.get(`profile/${userId}`)\n            .then(response => {\n                return response.data\n            })\n    },\n    getUserStatus(userId) {\n        return instanceAxios.get(`profile/status/${userId}`)\n    },\n    updateStatus(status) {\n        return instanceAxios.put(`profile/status/`, { status: status })\n    }\n}\n\nexport const authMeAPI = {\n    getAuthMe() {\n        return instanceAxios.get('/auth/me')\n            .then(response => {\n                return response.data\n            })\n    },\n    login(email, password, rememberMe ) {\n        return instanceAxios.post('/auth/login', {\n            email: email,\n            password: password,\n            rememberMe: rememberMe })\n        .then(response => {\n            return response.data\n        })\n    },\n    loginOut() {\n        return instanceAxios.delete('/auth/login')\n        .then(response => {\n            return response.data\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}