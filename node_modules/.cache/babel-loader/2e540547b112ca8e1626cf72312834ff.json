{"ast":null,"code":"var _jsxFileName = \"/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Login/Form/Form.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { Field, reduxForm } from 'redux-form'; // components\n\nimport { Input } from '../../common/form-controls/form-controls'; // validators\n\nimport { required, maxLengthCreator, minLengthCreator } from '../../common/validators/validators';\nimport styles from './Form.module.css';\nconst maxLength100 = maxLengthCreator(100);\nconst minLength5 = minLengthCreator(5);\n\nfunction LoginForm({\n  className,\n  handleSubmit,\n  error,\n  captchaUrl\n}) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: cn(styles.Root, className),\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: Input,\n    name: \"email\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\",\n    type: \"email\",\n    className: cn(styles.field),\n    validate: [required, maxLength100, minLength5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: Input,\n    name: \"password\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    type: \"password\",\n    className: cn(styles.field),\n    validate: [required, maxLength100, minLength5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: Input,\n    name: \"rememberMe\",\n    type: \"checkbox\",\n    className: cn(styles.checkbox),\n    validate: [required, maxLength100, minLength5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), error && /*#__PURE__*/React.createElement(\"span\", {\n    className: cn(styles.errorNote),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }\n  }, error), captchaUrl && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: captchaUrl,\n    alt: \"\\u041A\\u0430\\u043F\\u0447\\u0430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: Input,\n    name: \"captcha\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u0430\\u043F\\u0447\\u0443\",\n    type: \"text\",\n    className: cn(styles.field),\n    validate: [required],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: cn(styles.button),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0430\\u0442\\u044C\\u0441\\u044F\"));\n}\n\nconst FormLoginRedux = reduxForm({\n  form: 'formLogin'\n})(LoginForm);\nLoginForm.propTypes = {\n  className: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired\n};\nLoginForm.defaultProps = {\n  className: ''\n};\nexport default FormLoginRedux;","map":{"version":3,"sources":["/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Login/Form/Form.jsx"],"names":["React","PropTypes","cn","Field","reduxForm","Input","required","maxLengthCreator","minLengthCreator","styles","maxLength100","minLength5","LoginForm","className","handleSubmit","error","captchaUrl","Root","field","checkbox","errorNote","button","FormLoginRedux","form","propTypes","string","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { Field, reduxForm } from 'redux-form';\n\n// components\nimport { Input } from '../../common/form-controls/form-controls';\n\n// validators\nimport {\n    required,\n    maxLengthCreator,\n    minLengthCreator\n} from '../../common/validators/validators';\n\nimport styles from './Form.module.css';\n\nconst maxLength100 = maxLengthCreator(100);\nconst minLength5 = minLengthCreator(5);\n\nfunction LoginForm({ className, handleSubmit, error, captchaUrl }) {\n    return (\n        <form className={cn(styles.Root, className)} onSubmit={handleSubmit}>\n            <Field component={Input}\n                name=\"email\"\n                placeholder=\"Введите email\"\n                type=\"email\"\n                className={cn(styles.field)}\n                validate={[required, maxLength100, minLength5]}>\n            </Field>\n\n            <Field component={Input}\n                name=\"password\"\n                placeholder=\"Введите пароль\"\n                type=\"password\"\n                className={cn(styles.field)}\n                validate={[required, maxLength100, minLength5]}>\n            </Field>\n\n            <Field component={Input}\n                name=\"rememberMe\"\n                type=\"checkbox\"\n                className={cn(styles.checkbox)}\n                validate={[required, maxLength100, minLength5]}>\n            </Field>\n\n            {error && <span className={cn(styles.errorNote)}>{error}</span>}\n            {captchaUrl &&\n                <>\n                    <img src={captchaUrl} alt=\"Капча\" />\n\n                    <Field component={Input}\n                        name=\"captcha\"\n                        placeholder=\"Введите капчу\"\n                        type=\"text\"\n                        className={cn(styles.field)}\n                        validate={[required]}>\n                    </Field>\n                </>\n            }\n            <button className={cn(styles.button)}>Зарегаться</button>\n        </form>\n    )\n}\n\nconst FormLoginRedux = reduxForm({\n    form: 'formLogin'\n})(LoginForm);\n\nLoginForm.propTypes = {\n    className: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n}\n\nLoginForm.defaultProps = {\n    className: '',\n}\n\nexport default FormLoginRedux;\n"]},"metadata":{},"sourceType":"module"}