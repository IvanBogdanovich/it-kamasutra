{"ast":null,"code":"var _jsxFileName = \"/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux'; // hoc\n\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect'; // reducers\n\nimport { getProfileThunk, getUserStatusThunk, updateStatusThunk } from '../../redux/profile-reducer'; // components\n\nimport Profile from './Profile/Profile';\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.autorizedUserId;\n\n      if (!userId) {\n        this.props.push('/login');\n      }\n    }\n\n    this.props.getProfileThunk(userId);\n    this.props.getUserStatusThunk(userId);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatusThunk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    autorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getProfileThunk,\n  getUserStatusThunk,\n  updateStatusThunk\n}), withRouter, WithAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Profile/ProfileContainer.jsx"],"names":["React","connect","withRouter","compose","WithAuthRedirect","getProfileThunk","getUserStatusThunk","updateStatusThunk","Profile","ProfileContainer","Component","componentDidMount","userId","props","match","params","autorizedUserId","push","render","profile","status","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,4BAAjC,C,CAEA;;AACA,SAASC,eAAT,EACIC,kBADJ,EAEIC,iBAFJ,QAGO,6BAHP,C,CAKA;;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAA+C;AAC3CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,eAApB;;AAEA,UAAI,CAACJ,MAAL,EAAa;AACT,aAAKC,KAAL,CAAWI,IAAX,CAAgB,QAAhB;AACH;AACJ;;AACD,SAAKJ,KAAL,CAAWR,eAAX,CAA2BO,MAA3B;AACA,SAAKC,KAAL,CAAWP,kBAAX,CAA8BM,MAA9B;AACH;;AAEDM,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,OAAD,oBAAa,KAAKL,KAAlB;AACQ,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWM,OAD5B;AAEQ,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWO,MAF3B;AAGQ,MAAA,YAAY,EAAE,KAAKP,KAAL,CAAWN,iBAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAMH;;AArB0C;;AAwB/C,MAAMc,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADxB;AAEHC,IAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFvB;AAGHJ,IAAAA,eAAe,EAAEM,KAAK,CAACE,IAAN,CAAWZ,MAHzB;AAIHa,IAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAJhB,GAAP;AAMH,CAPD;;AASA,eAAetB,OAAO,CAClBF,OAAO,CAACoB,eAAD,EAAkB;AAAEhB,EAAAA,eAAF;AAAmBC,EAAAA,kBAAnB;AAAuCC,EAAAA;AAAvC,CAAlB,CADW,EAElBL,UAFkB,EAGlBE,gBAHkB,CAAP,CAIbK,gBAJa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\n// hoc\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect';\n\n// reducers\nimport { getProfileThunk,\n    getUserStatusThunk,\n    updateStatusThunk\n} from '../../redux/profile-reducer';\n\n// components\nimport Profile from './Profile/Profile';\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.autorizedUserId;\n\n            if (!userId) {\n                this.props.push('/login');\n            }\n        }\n        this.props.getProfileThunk(userId);\n        this.props.getUserStatusThunk(userId);\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                    profile={this.props.profile}\n                    status={this.props.status}\n                    updateStatus={this.props.updateStatusThunk} />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        autorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { getProfileThunk, getUserStatusThunk, updateStatusThunk }),\n    withRouter,\n    WithAuthRedirect\n)(ProfileContainer);\n"]},"metadata":{},"sourceType":"module"}