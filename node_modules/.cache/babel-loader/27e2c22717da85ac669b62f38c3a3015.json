{"ast":null,"code":"// types\nimport types from './types'; // initial state\n\nconst initialState = {\n  users: [],\n  totalCount: 21,\n  pageSize: 100,\n  currentPage: 1,\n  isFetching: false,\n  subscribersList: []\n}; // reducer\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case types.ADD_FRIEND:\n      {\n        return { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.userId) {\n              return { ...u,\n                followed: true\n              };\n            }\n\n            return u;\n          })\n        };\n      }\n\n    case types.DELETE_FRIEND:\n      {\n        return { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.userId) {\n              return { ...u,\n                followed: false\n              };\n            }\n\n            return u;\n          })\n        };\n      }\n\n    case types.SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case types.SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case types.SET_TOTAL_COUNT:\n      {\n        return { ...state,\n          totalCount: action.totalCount\n        };\n      }\n\n    case types.TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case types.TOGGLE_IS_WAIT_SUBSCRIBE:\n      {\n        return { ...state,\n          subscribersList: action.isFetching ? [...state.subscribersList, action.userId] : state.subscribersList.filter(id => {\n            return id !== action.userId;\n          })\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/a17092425/Desktop/pet/it-kamasutra/src/state/users/index.js"],"names":["types","initialState","users","totalCount","pageSize","currentPage","isFetching","subscribersList","reducer","state","action","type","ADD_FRIEND","map","u","id","userId","followed","DELETE_FRIEND","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_WAIT_SUBSCRIBE","filter"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjBC,EAAAA,QAAQ,EAAE,GAHO;AAIjBC,EAAAA,WAAW,EAAE,CAJI;AAKjBC,EAAAA,UAAU,EAAE,KALK;AAMjBC,EAAAA,eAAe,EAAE;AANA,CAArB,C,CASA;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGR,YAAzB,EAAuCS,MAAvC,EAA+C;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,KAAK,CAACY,UAAX;AAAuB;AACnB,eAAO,EACH,GAAGH,KADA;AAEHP,UAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYW,GAAZ,CAAgBC,CAAC,IAAI;AACxB,gBAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,MAApB,EAA4B;AACxB,qBAAO,EAAE,GAAGF,CAAL;AAAQG,gBAAAA,QAAQ,EAAE;AAAlB,eAAP;AACH;;AACD,mBAAOH,CAAP;AACH,WALM;AAFJ,SAAP;AASH;;AAED,SAAKd,KAAK,CAACkB,aAAX;AAA0B;AACtB,eAAO,EACH,GAAGT,KADA;AAEHP,UAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYW,GAAZ,CAAgBC,CAAC,IAAI;AACxB,gBAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,MAApB,EAA4B;AACxB,qBAAO,EAAE,GAAGF,CAAL;AAAQG,gBAAAA,QAAQ,EAAE;AAAlB,eAAP;AACH;;AACD,mBAAOH,CAAP;AACH,WALM;AAFJ,SAAP;AASH;;AAED,SAAKd,KAAK,CAACmB,SAAX;AAAsB;AAClB,eAAO,EACH,GAAGV,KADA;AAEHP,UAAAA,KAAK,EAAEQ,MAAM,CAACR;AAFX,SAAP;AAIH;;AAED,SAAKF,KAAK,CAACoB,gBAAX;AAA6B;AACzB,eAAO,EACH,GAAGX,KADA;AAEHJ,UAAAA,WAAW,EAAEK,MAAM,CAACL;AAFjB,SAAP;AAIH;;AAED,SAAKL,KAAK,CAACqB,eAAX;AAA4B;AACxB,eAAO,EACH,GAAGZ,KADA;AAEHN,UAAAA,UAAU,EAAEO,MAAM,CAACP;AAFhB,SAAP;AAIH;;AAED,SAAKH,KAAK,CAACsB,kBAAX;AAA+B;AAC3B,eAAO,EACH,GAAGb,KADA;AAEHH,UAAAA,UAAU,EAAEI,MAAM,CAACJ;AAFhB,SAAP;AAIH;;AAED,SAAKN,KAAK,CAACuB,wBAAX;AAAqC;AACjC,eAAO,EACH,GAAGd,KADA;AAEHF,UAAAA,eAAe,EAAEG,MAAM,CAACJ,UAAP,GACb,CAAC,GAAGG,KAAK,CAACF,eAAV,EAA2BG,MAAM,CAACM,MAAlC,CADa,GAEbP,KAAK,CAACF,eAAN,CAAsBiB,MAAtB,CAA6BT,EAAE,IAAI;AAC/B,mBAAOA,EAAE,KAAKL,MAAM,CAACM,MAArB;AACH,WAFD;AAJD,SAAP;AAQH;;AAED;AACI,aAAOP,KAAP;AAjER;AAmEH","sourcesContent":["// types\nimport types from './types';\n\n// initial state\nconst initialState = {\n    users: [],\n    totalCount: 21,\n    pageSize: 100,\n    currentPage: 1,\n    isFetching: false,\n    subscribersList: []\n}\n\n// reducer\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case types.ADD_FRIEND: {\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: true }\n                    }\n                    return u\n                })\n            }\n        }\n\n        case types.DELETE_FRIEND: {\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: false }\n                    }\n                    return u\n                })\n            }\n        }\n\n        case types.SET_USERS: {\n            return {\n                ...state,\n                users: action.users\n            }\n        }\n\n        case types.SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n\n        case types.SET_TOTAL_COUNT: {\n            return {\n                ...state,\n                totalCount: action.totalCount\n            }\n        }\n\n        case types.TOGGLE_IS_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n\n        case types.TOGGLE_IS_WAIT_SUBSCRIBE: {\n            return {\n                ...state,\n                subscribersList: action.isFetching ?\n                    [...state.subscribersList, action.userId] :\n                    state.subscribersList.filter(id => {\n                        return id !== action.userId\n                    })\n            }\n        }\n\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}