{"ast":null,"code":"// api\nimport { profileAPI } from './api'; // types\n\nimport types from './types';\nexport function addMessage(message) {\n  return {\n    type: types.ADD_MESSAGE_PROFILE,\n    message: message\n  };\n}\nexport function setProfileUser(profile) {\n  return {\n    type: types.SET_PROFILE_USER,\n    profile\n  };\n}\nexport function setStatus(status) {\n  return {\n    type: types.SET_STATUS,\n    status\n  };\n}\nexport function getProfileThunk(userId) {\n  return async dispatch => {\n    try {\n      const response = await profileAPI.getProfile(userId);\n      dispatch(setProfileUser(response));\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n}\nexport function getUserStatusThunk(userId) {\n  return async dispatch => {\n    try {\n      const response = await profileAPI.getUserStatus(userId);\n      dispatch(setStatus(response.data));\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n}\nexport function updateStatusThunk(status) {\n  return async dispatch => {\n    try {\n      const response = await profileAPI.updateStatus(status);\n\n      if (response.resultCode === 0) {\n        dispatch(setStatus(status));\n      }\n    } catch (e) {\n      throw new Error(e);\n    }\n  };\n}","map":{"version":3,"sources":["/Users/a17092425/Desktop/pet/it-kamasutra/src/state/profile/actions.js"],"names":["profileAPI","types","addMessage","message","type","ADD_MESSAGE_PROFILE","setProfileUser","profile","SET_PROFILE_USER","setStatus","status","SET_STATUS","getProfileThunk","userId","dispatch","response","getProfile","e","Error","getUserStatusThunk","getUserStatus","data","updateStatusThunk","updateStatus","resultCode"],"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,OAA3B,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAChC,SAAO;AACHC,IAAAA,IAAI,EAAEH,KAAK,CAACI,mBADT;AAEHF,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH;AAED,OAAO,SAASG,cAAT,CAAwBC,OAAxB,EAAiC;AACpC,SAAO;AACHH,IAAAA,IAAI,EAAEH,KAAK,CAACO,gBADT;AAEHD,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASE,SAAT,CAAoBC,MAApB,EAA4B;AAC/B,SAAO;AACHN,IAAAA,IAAI,EAAEH,KAAK,CAACU,UADT;AAEHD,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASE,eAAT,CAA0BC,MAA1B,EAAkC;AACrC,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMf,UAAU,CAACgB,UAAX,CAAsBH,MAAtB,CAAvB;AACAC,MAAAA,QAAQ,CAACR,cAAc,CAACS,QAAD,CAAf,CAAR;AACH,KAHD,CAIA,OAAME,CAAN,EAAS;AACL,YAAM,IAAIC,KAAJ,CAAUD,CAAV,CAAN;AACH;AACJ,GARD;AASH;AAED,OAAO,SAASE,kBAAT,CAA4BN,MAA5B,EAAoC;AACvC,SAAO,MAAMC,QAAN,IAAkB;AACrB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMf,UAAU,CAACoB,aAAX,CAAyBP,MAAzB,CAAvB;AACAC,MAAAA,QAAQ,CAACL,SAAS,CAACM,QAAQ,CAACM,IAAV,CAAV,CAAR;AACH,KAHD,CAIA,OAAMJ,CAAN,EAAS;AACL,YAAM,IAAIC,KAAJ,CAAUD,CAAV,CAAN;AACH;AACJ,GARD;AASH;AAED,OAAO,SAASK,iBAAT,CAA2BZ,MAA3B,EAAmC;AACtC,SAAO,MAAMI,QAAN,IAAkB;AACrB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMf,UAAU,CAACuB,YAAX,CAAwBb,MAAxB,CAAvB;;AACA,UAAIK,QAAQ,CAACS,UAAT,KAAwB,CAA5B,EAA+B;AAC3BV,QAAAA,QAAQ,CAACL,SAAS,CAACC,MAAD,CAAV,CAAR;AACH;AACJ,KALD,CAMA,OAAMO,CAAN,EAAS;AACL,YAAM,IAAIC,KAAJ,CAAUD,CAAV,CAAN;AACH;AACJ,GAVD;AAWH","sourcesContent":["// api\nimport { profileAPI } from './api';\n\n// types\nimport types from './types';\n\nexport function addMessage(message) {\n    return {\n        type: types.ADD_MESSAGE_PROFILE,\n        message: message\n    }\n}\n\nexport function setProfileUser(profile) {\n    return {\n        type: types.SET_PROFILE_USER,\n        profile\n    }\n}\n\nexport function setStatus (status) {\n    return {\n        type: types.SET_STATUS,\n        status\n    }\n}\n\nexport function getProfileThunk (userId) {\n    return async dispatch => {\n        try {\n            const response = await profileAPI.getProfile(userId);\n            dispatch(setProfileUser(response));\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n\nexport function getUserStatusThunk(userId) {\n    return async dispatch => {\n        try {\n            const response = await profileAPI.getUserStatus(userId);\n            dispatch(setStatus(response.data));\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n\nexport function updateStatusThunk(status) {\n    return async dispatch => {\n        try {\n            const response = await profileAPI.updateStatus(status);\n            if (response.resultCode === 0) {\n                dispatch(setStatus(status));\n            }\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}