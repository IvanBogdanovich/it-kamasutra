{"ast":null,"code":"var _jsxFileName = \"/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux'; // hoc\n\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect'; // actions\n\nimport { getProfileThunk, getUserStatusThunk, updateStatusThunk } from '../../state/profile/actions'; // components\n\nimport Profile from './Profile/Profile';\n\nclass ProfileContainer extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  componentDidMount(props) {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.autorizedUserId;\n\n      if (!userId) {\n        this.props.push('/login');\n      }\n    }\n\n    this.props.getProfileThunk(userId);\n    this.props.getUserStatusThunk(userId);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatusThunk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile.profile,\n    status: state.profile.status,\n    autorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getProfileThunk,\n  getUserStatusThunk,\n  updateStatusThunk\n}), withRouter, WithAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Profile/ProfileContainer.jsx"],"names":["React","connect","withRouter","compose","WithAuthRedirect","getProfileThunk","getUserStatusThunk","updateStatusThunk","Profile","ProfileContainer","Component","constructor","props","componentDidMount","userId","match","params","autorizedUserId","push","render","profile","status","mapStateToProps","state","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,4BAAjC,C,CAEA;;AACA,SAASC,eAAT,EACIC,kBADJ,EAEIC,iBAFJ,QAGO,6BAHP,C,CAKA;;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACH;;AAEDC,EAAAA,iBAAiB,CAACD,KAAD,EAAQ;AACrB,QAAIE,MAAM,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKF,KAAL,CAAWK,eAApB;;AAEA,UAAI,CAACH,MAAL,EAAa;AACT,aAAKF,KAAL,CAAWM,IAAX,CAAgB,QAAhB;AACH;AACJ;;AACD,SAAKN,KAAL,CAAWP,eAAX,CAA2BS,MAA3B;AACA,SAAKF,KAAL,CAAWN,kBAAX,CAA8BQ,MAA9B;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,OAAD,oBAAa,KAAKP,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWQ,OAA7C;AACQ,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWS,MAD3B;AAEQ,MAAA,YAAY,EAAE,KAAKT,KAAL,CAAWL,iBAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAMH;;AAzB0C;;AA4B/C,MAAMe,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcA,OADpB;AAEHC,IAAAA,MAAM,EAAEE,KAAK,CAACH,OAAN,CAAcC,MAFnB;AAGHJ,IAAAA,eAAe,EAAEM,KAAK,CAACC,IAAN,CAAWV,MAHzB;AAIHW,IAAAA,MAAM,EAAEF,KAAK,CAACC,IAAN,CAAWC;AAJhB,GAAP;AAMH,CAPD;;AASA,eAAetB,OAAO,CAClBF,OAAO,CAACqB,eAAD,EAAkB;AAAEjB,EAAAA,eAAF;AAAmBC,EAAAA,kBAAnB;AAAuCC,EAAAA;AAAvC,CAAlB,CADW,EAElBL,UAFkB,EAGlBE,gBAHkB,CAAP,CAIbK,gBAJa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\n// hoc\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect';\n\n// actions\nimport { getProfileThunk,\n    getUserStatusThunk,\n    updateStatusThunk\n} from '../../state/profile/actions';\n\n// components\nimport Profile from './Profile/Profile';\n\nclass ProfileContainer extends React.Component {\n    constructor(props) {\n        super()\n    }\n\n    componentDidMount(props) {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.autorizedUserId;\n\n            if (!userId) {\n                this.props.push('/login');\n            }\n        }\n        this.props.getProfileThunk(userId);\n        this.props.getUserStatusThunk(userId);\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} profile={this.props.profile}\n                    status={this.props.status}\n                    updateStatus={this.props.updateStatusThunk}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profile.profile,\n        status: state.profile.status,\n        autorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { getProfileThunk, getUserStatusThunk, updateStatusThunk }),\n    withRouter,\n    WithAuthRedirect\n)(ProfileContainer);\n"]},"metadata":{},"sourceType":"module"}