{"ast":null,"code":"import { getMeThunk } from './auth-reducer';\nconst INITIALIZED_SUCCESS = 'INITIALIZED-SUCCESS';\nconst initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      {\n        return { ...state,\n          initialized: true\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default appReducer;\nexport const initializedSuccess = () => {\n  return {\n    type: INITIALIZED_SUCCESS\n  };\n};\nexport const getInitializeThunk = () => {\n  return dispatch => {\n    let promise = dispatch(getMeThunk());\n    promise.then(() => {\n      dispatch(initializedSuccess());\n    });\n  };\n};","map":{"version":3,"sources":["/Users/a17092425/Desktop/oldrepa/it-kamasutra/src/redux/app-reducer.js"],"names":["getMeThunk","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","getInitializeThunk","dispatch","promise","then"],"mappings":"AAAA,SAASA,UAAT,QAA2B,gBAA3B;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AADI,CAArB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,mBAAL;AAA0B;AACtB,eAAO,EACH,GAAGI,KADA;AAEHF,UAAAA,WAAW,EAAE;AAFV,SAAP;AAIH;;AACD;AAAS;AACL,eAAOE,KAAP;AACH;AATL;AAWH,CAZD;;AAcA,eAAeD,UAAf;AAEA,OAAO,MAAMI,kBAAkB,GAAG,MAAM;AACpC,SAAO;AACHD,IAAAA,IAAI,EAAEN;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMQ,kBAAkB,GAAG,MAAM;AACpC,SAAQC,QAAD,IAAc;AACjB,QAAIC,OAAO,GAAGD,QAAQ,CAACV,UAAU,EAAX,CAAtB;AACAW,IAAAA,OAAO,CAACC,IAAR,CAAa,MAAM;AAChBF,MAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACF,KAFD;AAGH,GALD;AAMH,CAPM","sourcesContent":["import { getMeThunk } from './auth-reducer';\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED-SUCCESS';\n\nconst initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default appReducer;\n\nexport const initializedSuccess = () => {\n    return {\n        type: INITIALIZED_SUCCESS\n    }\n}\n\nexport const getInitializeThunk = () => {\n    return (dispatch) => {\n        let promise = dispatch(getMeThunk())\n        promise.then(() => {\n           dispatch(initializedSuccess())\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}