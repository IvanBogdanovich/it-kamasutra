{"ast":null,"code":"import { authMeAPI } from '../../api/api';\nimport { stopSubmit } from 'redux-form';\nimport types from './types';\nexport const setAuthUserData = (login, email, userId, isAuth) => {\n  return {\n    type: types.SET_AUTH_DATA_USER,\n    data: {\n      login,\n      email,\n      userId,\n      isAuth\n    }\n  };\n};\nexport const getMeThunk = () => {\n  return dispatch => {\n    return authMeAPI.getAuthMe().then(data => {\n      if (data.resultCode === 0) {\n        const {\n          login,\n          email,\n          id\n        } = data.data;\n        dispatch(setAuthUserData(login, email, id, true));\n      }\n    });\n  };\n};\nexport const loginThunk = (email, password, rememberMe) => {\n  return dispatch => {\n    authMeAPI.login(email, password, rememberMe).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(getMeThunk());\n      } else {\n        const message = data.messages;\n        dispatch(stopSubmit('formLogin', {\n          _error: message ? message : 'some wrong'\n        }));\n      }\n    });\n  };\n};\nexport const loginOutThunk = () => {\n  return dispatch => {\n    authMeAPI.loginOut().then(data => {\n      if (data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/a17092425/Desktop/pet/it-kamasutra/src/state/auth/actions.js"],"names":["authMeAPI","stopSubmit","types","setAuthUserData","login","email","userId","isAuth","type","SET_AUTH_DATA_USER","data","getMeThunk","dispatch","getAuthMe","then","resultCode","id","loginThunk","password","rememberMe","message","messages","_error","loginOutThunk","loginOut"],"mappings":"AAAA,SAASA,SAAT,QAA0B,eAA1B;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,MAAf,EAAuBC,MAAvB,KAAkC;AAC7D,SAAO;AACHC,IAAAA,IAAI,EAAEN,KAAK,CAACO,kBADT;AAEHC,IAAAA,IAAI,EAAE;AACFN,MAAAA,KADE;AAEFC,MAAAA,KAFE;AAGFC,MAAAA,MAHE;AAIFC,MAAAA;AAJE;AAFH,GAAP;AASH,CAVM;AAYP,OAAO,MAAMI,UAAU,GAAG,MAAM;AAC5B,SAAQC,QAAD,IAAc;AACjB,WAAOZ,SAAS,CAACa,SAAV,GAAsBC,IAAtB,CAA2BJ,IAAI,IAAI;AACtC,UAAIA,IAAI,CAACK,UAAL,KAAoB,CAAxB,EAA2B;AACvB,cAAM;AAAEX,UAAAA,KAAF;AAASC,UAAAA,KAAT;AAAgBW,UAAAA;AAAhB,YAAwBN,IAAI,CAACA,IAAnC;AACAE,QAAAA,QAAQ,CAACT,eAAe,CAACC,KAAD,EAAQC,KAAR,EAAeW,EAAf,EAAmB,IAAnB,CAAhB,CAAR;AACH;AACJ,KALM,CAAP;AAMH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMC,UAAU,GAAG,CAACZ,KAAD,EAAQa,QAAR,EAAkBC,UAAlB,KAAiC;AACvD,SAAQP,QAAD,IAAc;AACjBZ,IAAAA,SAAS,CAACI,KAAV,CAAgBC,KAAhB,EAAuBa,QAAvB,EAAiCC,UAAjC,EAA6CL,IAA7C,CAAkDJ,IAAI,IAAI;AACtD,UAAIA,IAAI,CAACK,UAAL,KAAoB,CAAxB,EAA2B;AACvBH,QAAAA,QAAQ,CAACD,UAAU,EAAX,CAAR;AACH,OAFD,MAEO;AACH,cAAMS,OAAO,GAAGV,IAAI,CAACW,QAArB;AACAT,QAAAA,QAAQ,CAACX,UAAU,CAAC,WAAD,EAAc;AAACqB,UAAAA,MAAM,EAAEF,OAAO,GAAGA,OAAH,GAAa;AAA7B,SAAd,CAAX,CAAR;AACH;AACJ,KAPD;AAQH,GATD;AAUH,CAXM;AAaP,OAAO,MAAMG,aAAa,GAAG,MAAM;AAC/B,SAAQX,QAAD,IAAc;AACjBZ,IAAAA,SAAS,CAACwB,QAAV,GAAqBV,IAArB,CAA0BJ,IAAI,IAAI;AAC9B,UAAIA,IAAI,CAACK,UAAL,KAAoB,CAAxB,EAA2B;AACvBH,QAAAA,QAAQ,CAACT,eAAe,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAhB,CAAR;AACH;AACJ,KAJD;AAKH,GAND;AAOH,CARM","sourcesContent":["import { authMeAPI } from '../../api/api';\nimport { stopSubmit } from 'redux-form';\nimport types from './types';\n\nexport const setAuthUserData = (login, email, userId, isAuth) => {\n    return {\n        type: types.SET_AUTH_DATA_USER,\n        data: {\n            login,\n            email,\n            userId,\n            isAuth\n        }\n    }\n}\n\nexport const getMeThunk = () => {\n    return (dispatch) => {\n        return authMeAPI.getAuthMe().then(data => {\n            if (data.resultCode === 0) {\n                const { login, email, id, } = data.data;\n                dispatch(setAuthUserData(login, email, id, true));\n            }\n        })\n    }\n}\n\nexport const loginThunk = (email, password, rememberMe) => {\n    return (dispatch) => {\n        authMeAPI.login(email, password, rememberMe).then(data => {\n            if (data.resultCode === 0) {\n                dispatch(getMeThunk());\n            } else {\n                const message = data.messages\n                dispatch(stopSubmit('formLogin', {_error: message ? message : 'some wrong' }));\n            }\n        })\n    }\n}\n\nexport const loginOutThunk = () => {\n    return (dispatch) => {\n        authMeAPI.loginOut().then(data => {\n            if (data.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false));\n            }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}