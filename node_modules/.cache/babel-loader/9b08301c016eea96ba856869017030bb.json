{"ast":null,"code":"var _jsxFileName = \"/Users/a17092425/Desktop/oldrepa/it-kamasutra/src/components/Login/Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom'; // helpers\n\nimport { required, maxLengthCreator, minLengthCreator } from '../common/validators/validators'; // reducers\n\nimport { loginThunk } from '../../redux/auth-reducer'; // components\n\nimport { Input } from '../common/form-controls/form-controls';\nimport styles from './Login.module.css';\nconst maxLength100 = maxLengthCreator(100);\nconst minLength5 = minLengthCreator(5);\n\nconst LoginForm = props => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    className: s.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: Input,\n    name: \"email\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\",\n    type: \"email\",\n    className: styles.field,\n    validate: [required, maxLength100, minLength5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: Input,\n    name: \"password\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    type: \"password\",\n    className: styles.field,\n    validate: [required, maxLength100, minLength5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: Input,\n    name: \"rememberMe\",\n    type: \"checkbox\",\n    className: styles.checkbox,\n    validate: [required, maxLength100, minLength5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), props.error && /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.errorNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, props.error), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0430\\u0442\\u044C\\u0441\\u044F\"));\n};\n\nconst FormLoginRedux = reduxForm({\n  form: 'formLogin'\n})(LoginForm);\n\nconst Login = props => {\n  if (props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }\n    });\n  }\n\n  console.log('Login', props);\n\n  const onSubmit = formData => {\n    props.loginThunk(formData.email, formData.password, formData.rememberMe);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"\\u042D\\u0442\\u043E \\u043B\\u043E\\u0433\\u0438\\u043D\"), /*#__PURE__*/React.createElement(FormLoginRedux, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginThunk\n})(Login);","map":{"version":3,"sources":["/Users/a17092425/Desktop/oldrepa/it-kamasutra/src/components/Login/Login.jsx"],"names":["React","Field","reduxForm","connect","Redirect","required","maxLengthCreator","minLengthCreator","loginThunk","Input","styles","maxLength100","minLength5","LoginForm","props","handleSubmit","s","form","field","checkbox","error","errorNote","button","FormLoginRedux","Login","isAuth","console","log","onSubmit","formData","email","password","rememberMe","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n// helpers\nimport {\n    required,\n    maxLengthCreator,\n    minLengthCreator\n} from '../common/validators/validators';\n\n// reducers\nimport { loginThunk } from '../../redux/auth-reducer';\n\n// components\nimport { Input } from '../common/form-controls/form-controls';\n\nimport styles from './Login.module.css';\n\nconst maxLength100 = maxLengthCreator(100);\nconst minLength5 = minLengthCreator(5);\n\nconst LoginForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.form}>\n            <Field component={Input}\n                name=\"email\"\n                placeholder=\"Введите email\"\n                type=\"email\"\n                className={styles.field}\n                validate={[required, maxLength100, minLength5]}>\n            </Field>\n            <Field component={Input}\n                name=\"password\"\n                placeholder=\"Введите пароль\"\n                type=\"password\"\n                className={styles.field}\n                validate={[required, maxLength100, minLength5]}>\n            </Field>\n            <Field component={Input}\n                name=\"rememberMe\"\n                type=\"checkbox\"\n                className={styles.checkbox}\n                validate={[required, maxLength100, minLength5]}>\n            </Field>\n            {props.error && <span className={styles.errorNote}>{props.error}</span>}\n            <button className={styles.button}>Зарегаться</button>\n        </form>\n    )\n}\n\nconst FormLoginRedux = reduxForm({\n    form: 'formLogin'\n})(LoginForm)\n\nconst Login = (props) => {\n\n    if (props.isAuth) {\n        return <Redirect to=\"/profile\" />\n    }\n\n    console.log('Login', props)\n    const onSubmit = (formData) => {\n        props.loginThunk(formData.email, formData.password, formData.rememberMe)\n    }\n    return <div>\n        <h1>Это логин</h1>\n        <FormLoginRedux onSubmit={onSubmit} />\n    </div>\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default connect(mapStateToProps, { loginThunk })(Login);\n\n"]},"metadata":{},"sourceType":"module"}