{"ast":null,"code":"var _jsxFileName = \"/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Dialogs/Dialogs.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Field, reduxForm } from 'redux-form'; // hoc\n\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect'; // actions\n\nimport { addMessage } from '../../state/dialogs/actions'; // validators\n\nimport { required, maxLengthCreator, minLengthCreator } from '../common/validators/validators'; // components\n\nimport Messages from './Messages/Messages';\nimport { Textarea } from '../common/form-controls/form-controls';\nimport styles from './Dialogs.module.css';\nconst maxLength15 = maxLengthCreator(15);\nconst minLength2 = minLengthCreator(2);\n\nfunction formDialogs(props) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: styles.textarea_wrap,\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: Textarea,\n    placeholder: \"tell me about you\",\n    name: \"message\",\n    validate: [required, maxLength15, minLength2],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"add message\"));\n}\n\nconst FormDialogsRedux = reduxForm({\n  form: 'formDialogs'\n})(formDialogs);\n\nfunction Dialogs(props) {\n  const sendMessage = value => {\n    props.addMessage(value.message);\n  };\n\n  const messages = props.messagesDefault.map((m, i) => {\n    return /*#__PURE__*/React.createElement(Messages, {\n      key: i,\n      message: m.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"\\u0414\\u0438\\u0430\\u043B\\u043E\\u0433\\u0438\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.dialogs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.wrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, messages, /*#__PURE__*/React.createElement(FormDialogsRedux, {\n    onSubmit: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }))));\n}\n\nDialogs.propTypes = {\n  messagesDefault: PropTypes.arrayOf(PropTypes.shape({\n    message: PropTypes.string\n  }))\n};\nDialogs.defaultProps = {\n  name: 'Login'\n};\n\nconst mapStateToProps = state => {\n  return {\n    messagesDefault: state.dialogs.messagesData\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  addMessage\n}), WithAuthRedirect)(Dialogs);","map":{"version":3,"sources":["/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Dialogs/Dialogs.jsx"],"names":["React","PropTypes","cn","connect","compose","Field","reduxForm","WithAuthRedirect","addMessage","required","maxLengthCreator","minLengthCreator","Messages","Textarea","styles","maxLength15","minLength2","formDialogs","props","textarea_wrap","handleSubmit","button","FormDialogsRedux","form","Dialogs","sendMessage","value","message","messages","messagesDefault","map","m","i","title","dialogs","wrap","propTypes","arrayOf","shape","string","defaultProps","name","mapStateToProps","state","messagesData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Field, reduxForm } from 'redux-form';\n\n// hoc\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect';\n\n// actions\nimport { addMessage } from '../../state/dialogs/actions';\n\n// validators\nimport { required,\n    maxLengthCreator,\n    minLengthCreator }\nfrom '../common/validators/validators';\n\n// components\nimport Messages from './Messages/Messages';\nimport { Textarea } from '../common/form-controls/form-controls';\n\nimport styles from './Dialogs.module.css';\n\nconst maxLength15 = maxLengthCreator(15);\nconst minLength2 = minLengthCreator(2);\n\nfunction formDialogs(props) {\n    return (\n        <form className={styles.textarea_wrap} onSubmit={props.handleSubmit}>\n            <Field\n                component={Textarea}\n                placeholder=\"tell me about you\"\n                name=\"message\"\n                validate={[required, maxLength15, minLength2]}\n            />\n            <button className={styles.button}>add message</button>\n        </form>\n    )\n}\n\nconst FormDialogsRedux = reduxForm({\n    form: 'formDialogs'\n})(formDialogs);\n\nfunction Dialogs(props) {\n\n    const sendMessage = (value) => {\n        props.addMessage(value.message)\n    }\n\n    const messages = props.messagesDefault.map((m, i) => {\n        return <Messages key={i} message={m.message}></Messages>\n    })\n\n    return (\n        <div>\n            <h1 className={styles.title}>Диалоги</h1>\n            <div className={styles.dialogs}>\n                <div className={styles.wrap}>\n                    {messages}\n                    <FormDialogsRedux onSubmit={sendMessage} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nDialogs.propTypes = {\n    messagesDefault: PropTypes.arrayOf(\n        PropTypes.shape({\n            message: PropTypes.string,\n        }),\n    ),\n};\n\nDialogs.defaultProps = {\n    name: 'Login',\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        messagesDefault: state.dialogs.messagesData,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { addMessage }),\n    WithAuthRedirect\n)(Dialogs);\n"]},"metadata":{},"sourceType":"module"}