{"ast":null,"code":"var _jsxFileName = \"/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Paginator/Paginator.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames'; // actions\n\nimport { getUsersThunk } from '../../state/users/actions';\nimport styles from './styles.module.css';\n\nfunction Paginator({\n  className,\n  totalCount,\n  pageSize,\n  currentPage\n}) {\n  const onPageChanged = pageNumber => {\n    getUsersThunk(pageNumber, pageSize);\n  };\n\n  const pageCount = Math.ceil(totalCount / pageSize);\n  const pages = [];\n\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push(i);\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: cn(styles.Root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, pages.map((p, id) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      className: currentPage === p ? styles.users__pagination__cell + ' ' + styles.selected : styles.users__pagination__cell,\n      onClick: () => {\n        onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 28\n      }\n    }, p);\n  }));\n}\n\nPaginator.propTypes = {\n  className: PropTypes.string,\n  totalCount: PropTypes.number,\n  pageSize: PropTypes.number,\n  currentPage: PropTypes.number\n};\nPaginator.defaultProps = {\n  className: '',\n  totalCount: 0,\n  pageSize: 0,\n  currentPage: 0\n};\nexport default Paginator;","map":{"version":3,"sources":["/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Paginator/Paginator.jsx"],"names":["React","PropTypes","cn","getUsersThunk","styles","Paginator","className","totalCount","pageSize","currentPage","onPageChanged","pageNumber","pageCount","Math","ceil","pages","i","push","Root","map","p","id","users__pagination__cell","selected","propTypes","string","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,EAAP,MAAe,YAAf,C,CAEA;;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA;AAAnC,CAAnB,EAAqE;AACjE,QAAMC,aAAa,GAAIC,UAAD,IAAgB;AAClCR,IAAAA,aAAa,CAACQ,UAAD,EAAaH,QAAb,CAAb;AACH,GAFD;;AAIA,QAAMI,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUP,UAAU,GAAGC,QAAvB,CAAlB;AAEA,QAAMO,KAAK,GAAG,EAAd;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,SAArB,EAAgCI,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,sBACI;AAAI,IAAA,SAAS,EAAEd,EAAE,CAACE,MAAM,CAACc,IAAR,EAAcZ,SAAd,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQS,KAAK,CAACI,GAAN,CAAU,CAACC,CAAD,EAAIC,EAAJ,KAAW;AACjB,wBAAO;AAAI,MAAA,GAAG,EAAEA,EAAT;AAAa,MAAA,SAAS,EACzBZ,WAAW,KAAKW,CAAhB,GAAoBhB,MAAM,CAACkB,uBAAP,GAAiC,GAAjC,GAChBlB,MAAM,CAACmB,QADX,GAEInB,MAAM,CAACkB,uBAHR;AAIH,MAAA,OAAO,EAAE,MAAM;AACXZ,QAAAA,aAAa,CAACU,CAAD,CAAb;AACH,OANE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMCA,CAND,CAAP;AAOH,GARD,CAFR,CADJ;AAeH;;AAEDf,SAAS,CAACmB,SAAV,GAAsB;AAClBlB,EAAAA,SAAS,EAAEL,SAAS,CAACwB,MADH;AAElBlB,EAAAA,UAAU,EAAEN,SAAS,CAACyB,MAFJ;AAGlBlB,EAAAA,QAAQ,EAAEP,SAAS,CAACyB,MAHF;AAIlBjB,EAAAA,WAAW,EAAER,SAAS,CAACyB;AAJL,CAAtB;AAOArB,SAAS,CAACsB,YAAV,GAAyB;AACrBrB,EAAAA,SAAS,EAAE,EADU;AAErBC,EAAAA,UAAU,EAAE,CAFS;AAGrBC,EAAAA,QAAQ,EAAE,CAHW;AAIrBC,EAAAA,WAAW,EAAE;AAJQ,CAAzB;AAOA,eAAeJ,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\n// actions\nimport { getUsersThunk } from '../../state/users/actions';\n\nimport styles from './styles.module.css';\n\nfunction Paginator({ className, totalCount, pageSize, currentPage }) {\n    const onPageChanged = (pageNumber) => {\n        getUsersThunk(pageNumber, pageSize)\n    }\n\n    const pageCount = Math.ceil(totalCount / pageSize)\n\n    const pages = [];\n\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i)\n    }\n\n    return (\n        <ul className={cn(styles.Root, className)}>\n            {\n                pages.map((p, id) => {\n                    return <li key={id} className={\n                        currentPage === p ? styles.users__pagination__cell + ' ' +\n                            styles.selected :\n                            styles.users__pagination__cell}\n                        onClick={() => {\n                            onPageChanged(p)\n                        }}>{p}</li>\n                })\n            }\n        </ul>\n    )\n}\n\nPaginator.propTypes = {\n    className: PropTypes.string,\n    totalCount: PropTypes.number,\n    pageSize: PropTypes.number,\n    currentPage: PropTypes.number,\n}\n\nPaginator.defaultProps = {\n    className: '',\n    totalCount: 0,\n    pageSize: 0,\n    currentPage: 0,\n}\n\nexport default Paginator;\n"]},"metadata":{},"sourceType":"module"}