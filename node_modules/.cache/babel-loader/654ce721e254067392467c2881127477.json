{"ast":null,"code":"var _jsxFileName = \"/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Profile/ProfileContainer.jsx\";\nimport React, { useEffect, useCallback } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux'; // hoc\n\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect'; // actions\n\nimport { getProfileThunk, getUserStatusThunk, updateStatusThunk } from '../../state/profile/actions'; // components\n\nimport Profile from './Profile/Profile';\n\nfunction ProfileContainer(props, match, autorizedUserId) {\n  const dispatch = useDispatch();\n  const handleUserId = useCallback(() => {\n    console.log('props handleUserId', props);\n    let userId = props.match.params.userId;\n\n    if (!userId) {\n      userId = autorizedUserId; // if (!userId) {\n      //     props.push('/login');\n      // }\n    }\n\n    dispatch(getProfileThunk(userId));\n    dispatch(getUserStatusThunk(userId));\n  }, [autorizedUserId, dispatch, props.match.params.userId]);\n  useEffect(() => {\n    handleUserId();\n  }, [handleUserId]);\n  return /*#__PURE__*/React.createElement(Profile, Object.assign({}, props, {\n    profile: props.profile,\n    status: props.status,\n    updateStatus: props.updateStatusThunk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profile.profile,\n    status: state.profile.status,\n    autorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  updateStatusThunk\n}), withRouter, WithAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Profile/ProfileContainer.jsx"],"names":["React","useEffect","useCallback","connect","useDispatch","withRouter","compose","WithAuthRedirect","getProfileThunk","getUserStatusThunk","updateStatusThunk","Profile","ProfileContainer","props","match","autorizedUserId","dispatch","handleUserId","console","log","userId","params","profile","status","mapStateToProps","state","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,4BAAjC,C,CAEA;;AACA,SAASC,eAAT,EACIC,kBADJ,EAEIC,iBAFJ,QAGO,6BAHP,C,CAKA;;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiCC,KAAjC,EAAwCC,eAAxC,EAAyD;AACrD,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,QAAMa,YAAY,GAAGf,WAAW,CAAC,MAAM;AACnCgB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCN,KAAlC;AACA,QAAIO,MAAM,GAAGP,KAAK,CAACC,KAAN,CAAYO,MAAZ,CAAmBD,MAAhC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAGL,eAAT,CADS,CAGT;AACA;AACA;AACH;;AAEDC,IAAAA,QAAQ,CAACR,eAAe,CAACY,MAAD,CAAhB,CAAR;AACAJ,IAAAA,QAAQ,CAACP,kBAAkB,CAACW,MAAD,CAAnB,CAAR;AACH,GAb+B,EAa7B,CAACL,eAAD,EAAkBC,QAAlB,EAA4BH,KAAK,CAACC,KAAN,CAAYO,MAAZ,CAAmBD,MAA/C,CAb6B,CAAhC;AAeAnB,EAAAA,SAAS,CAAC,MAAK;AACXgB,IAAAA,YAAY;AACf,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIA,sBACI,oBAAC,OAAD,oBAAaJ,KAAb;AACQ,IAAA,OAAO,EAAEA,KAAK,CAACS,OADvB;AAEQ,IAAA,MAAM,EAAET,KAAK,CAACU,MAFtB;AAGQ,IAAA,YAAY,EAAEV,KAAK,CAACH,iBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAOH;;AAED,MAAMc,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHH,IAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,CAAcA,OADpB;AAEHC,IAAAA,MAAM,EAAEE,KAAK,CAACH,OAAN,CAAcC,MAFnB;AAGHR,IAAAA,eAAe,EAAEU,KAAK,CAACC,IAAN,CAAWN,MAHzB;AAIHO,IAAAA,MAAM,EAAEF,KAAK,CAACC,IAAN,CAAWC;AAJhB,GAAP;AAMH,CAPD;;AASA,eAAerB,OAAO,CAClBH,OAAO,CAACqB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CADW,EAElBL,UAFkB,EAGlBE,gBAHkB,CAAP,CAIbK,gBAJa,CAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\n// hoc\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect';\n\n// actions\nimport { getProfileThunk,\n    getUserStatusThunk,\n    updateStatusThunk\n} from '../../state/profile/actions';\n\n// components\nimport Profile from './Profile/Profile';\n\nfunction ProfileContainer(props, match, autorizedUserId) {\n    const dispatch = useDispatch();\n\n    const handleUserId = useCallback(() => {\n        console.log('props handleUserId', props)\n        let userId = props.match.params.userId;\n        if (!userId) {\n            userId = autorizedUserId;\n\n            // if (!userId) {\n            //     props.push('/login');\n            // }\n        }\n\n        dispatch(getProfileThunk(userId));\n        dispatch(getUserStatusThunk(userId));\n    }, [autorizedUserId, dispatch, props.match.params.userId])\n\n    useEffect(()=> {\n        handleUserId();\n    }, [handleUserId]);\n\n    return (\n        <Profile {...props}\n                profile={props.profile}\n                status={props.status}\n                updateStatus={props.updateStatusThunk}\n        />\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profile.profile,\n        status: state.profile.status,\n        autorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { updateStatusThunk }),\n    withRouter,\n    WithAuthRedirect\n)(ProfileContainer);\n"]},"metadata":{},"sourceType":"module"}