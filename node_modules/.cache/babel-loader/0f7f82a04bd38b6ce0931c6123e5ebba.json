{"ast":null,"code":"var _jsxFileName = \"/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Login/Login.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom'; // validators\n\nimport { required, maxLengthCreator, minLengthCreator } from '../common/validators/validators'; // actions\n\nimport { loginThunk } from '../../state/auth/actions'; // components\n\nimport { Input } from '../common/form-controls/form-controls';\nimport styles from './Login.module.css';\nconst maxLength100 = maxLengthCreator(100);\nconst minLength5 = minLengthCreator(5);\n\nfunction LoginForm(props) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: styles.form,\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: Input,\n    name: \"email\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\",\n    type: \"email\",\n    className: styles.field,\n    validate: [required, maxLength100, minLength5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: Input,\n    name: \"password\",\n    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    type: \"password\",\n    className: styles.field,\n    validate: [required, maxLength100, minLength5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    component: Input,\n    name: \"rememberMe\",\n    type: \"checkbox\",\n    className: styles.checkbox,\n    validate: [required, maxLength100, minLength5],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), props.error && /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.errorNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, props.error), /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0430\\u0442\\u044C\\u0441\\u044F\"));\n}\n\nconst FormLoginRedux = reduxForm({\n  form: 'formLogin'\n})(LoginForm);\n\nfunction Login(props) {\n  if (props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 16\n      }\n    });\n  }\n\n  const onSubmit = formData => {\n    props.loginThunk(formData.email, formData.password, formData.rememberMe);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"\\u042D\\u0442\\u043E \\u043B\\u043E\\u0433\\u0438\\u043D\"), /*#__PURE__*/React.createElement(FormLoginRedux, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginThunk\n})(Login);","map":{"version":3,"sources":["/Users/a17092425/Desktop/pet/it-kamasutra/src/components/Login/Login.jsx"],"names":["React","Field","reduxForm","connect","Redirect","required","maxLengthCreator","minLengthCreator","loginThunk","Input","styles","maxLength100","minLength5","LoginForm","props","form","handleSubmit","field","checkbox","error","errorNote","button","FormLoginRedux","Login","isAuth","onSubmit","formData","email","password","rememberMe","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n// validators\nimport {\n    required,\n    maxLengthCreator,\n    minLengthCreator\n} from '../common/validators/validators';\n\n// actions\nimport { loginThunk } from '../../state/auth/actions';\n\n// components\nimport { Input } from '../common/form-controls/form-controls';\n\nimport styles from './Login.module.css';\n\nconst maxLength100 = maxLengthCreator(100);\nconst minLength5 = minLengthCreator(5);\n\nfunction LoginForm(props) {\n    return (\n        <form className={styles.form} onSubmit={props.handleSubmit}>\n            <Field component={Input}\n                name=\"email\"\n                placeholder=\"Введите email\"\n                type=\"email\"\n                className={styles.field}\n                validate={[required, maxLength100, minLength5]}>\n            </Field>\n\n            <Field component={Input}\n                name=\"password\"\n                placeholder=\"Введите пароль\"\n                type=\"password\"\n                className={styles.field}\n                validate={[required, maxLength100, minLength5]}>\n            </Field>\n\n            <Field component={Input}\n                name=\"rememberMe\"\n                type=\"checkbox\"\n                className={styles.checkbox}\n                validate={[required, maxLength100, minLength5]}>\n            </Field>\n\n            {props.error && <span className={styles.errorNote}>{props.error}</span>}\n            <button className={styles.button}>Зарегаться</button>\n        </form>\n    )\n}\n\nconst FormLoginRedux = reduxForm({\n    form: 'formLogin'\n})(LoginForm);\n\nfunction Login(props) {\n\n    if (props.isAuth) {\n        return <Redirect to=\"/profile\" />\n    }\n\n    const onSubmit = (formData) => {\n        props.loginThunk(formData.email, formData.password, formData.rememberMe)\n    }\n\n    return <div>\n        <h1>Это логин</h1>\n        <FormLoginRedux onSubmit={onSubmit} />\n    </div>\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default connect(mapStateToProps, { loginThunk })(Login);\n"]},"metadata":{},"sourceType":"module"}