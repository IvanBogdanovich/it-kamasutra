{"ast":null,"code":"import { usersAPI } from '../api/api';\nconst ADD_FRIEND = 'ADD-FRIEND';\nconst DELETE_FRIEND = 'DELETE-FRIEND';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_WAIT_SUBSCRIBE = 'TOGGLE-IS-WAIT-SUBSCRIBE';\nconst initialState = {\n  users: [],\n  totalCount: 21,\n  pageSize: 100,\n  currentPage: 1,\n  isFetching: false,\n  subscribersList: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FRIEND:\n      {\n        return { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.userId) {\n              return { ...u,\n                followed: true\n              };\n            }\n\n            return u;\n          })\n        };\n      }\n\n    case DELETE_FRIEND:\n      {\n        return { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.userId) {\n              return { ...u,\n                followed: false\n              };\n            }\n\n            return u;\n          })\n        };\n      }\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_COUNT:\n      {\n        return { ...state,\n          totalCount: action.totalCount\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TOGGLE_IS_WAIT_SUBSCRIBE:\n      {\n        return { ...state,\n          subscribersList: action.isFetching ? [...state.subscribersList, action.userId] : state.subscribersList.filter(id => {\n            return id != action.userId;\n          })\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const acceptAddFriend = userId => {\n  return {\n    type: ADD_FRIEND,\n    userId\n  };\n};\nexport const acceptDeleteFriend = userId => {\n  return {\n    type: DELETE_FRIEND,\n    userId\n  };\n};\nexport const setUsers = users => {\n  return {\n    type: SET_USERS,\n    users\n  };\n};\nexport const setCurrentPage = currentPage => {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage\n  };\n};\nexport const setTotalCount = totalCount => {\n  return {\n    type: SET_TOTAL_COUNT,\n    totalCount\n  };\n};\nexport const setToggleIsFetching = isFetching => {\n  return {\n    type: TOGGLE_IS_FETCHING,\n    isFetching\n  };\n};\nexport const setWaitIsSubscribe = (isFetching, userId) => {\n  return {\n    type: TOGGLE_IS_WAIT_SUBSCRIBE,\n    isFetching,\n    userId\n  };\n};\nexport const getUsersThunk = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(setToggleIsFetching(true));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(setToggleIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setTotalCount(data.totalCount));\n      dispatch(setCurrentPage(currentPage));\n    });\n  };\n};\nexport const deleteFriendThunk = userId => {\n  return dispatch => {\n    dispatch(setWaitIsSubscribe(true, userId));\n    usersAPI.deleteFriend(userId).then(data => {\n      if (data.resultCode == 0) {\n        dispatch(acceptDeleteFriend(userId));\n      }\n\n      dispatch(setWaitIsSubscribe(false, userId));\n    });\n  };\n};\nexport const addFriendThunk = userId => {\n  return dispatch => {\n    dispatch(setWaitIsSubscribe(true, userId));\n    usersAPI.addFriend(userId).then(data => {\n      if (data.resultCode == 0) {\n        dispatch(acceptAddFriend(userId));\n      }\n\n      dispatch(setWaitIsSubscribe(false, userId));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/Users/a17092425/Desktop/oldrepa/it-kamasutra/src/redux/users-reducer.js"],"names":["usersAPI","ADD_FRIEND","DELETE_FRIEND","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_WAIT_SUBSCRIBE","initialState","users","totalCount","pageSize","currentPage","isFetching","subscribersList","usersReducer","state","action","type","map","u","id","userId","followed","filter","acceptAddFriend","acceptDeleteFriend","setUsers","setCurrentPage","setTotalCount","setToggleIsFetching","setWaitIsSubscribe","getUsersThunk","dispatch","getUsers","then","data","items","deleteFriendThunk","deleteFriend","resultCode","addFriendThunk","addFriend"],"mappings":"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","sourcesContent":["import { usersAPI } from '../api/api';\n\nconst ADD_FRIEND = 'ADD-FRIEND';\nconst DELETE_FRIEND = 'DELETE-FRIEND';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_WAIT_SUBSCRIBE = 'TOGGLE-IS-WAIT-SUBSCRIBE';\n\nconst initialState = {\n    users: [],\n    totalCount: 21,\n    pageSize: 100,\n    currentPage: 1,\n    isFetching: false,\n    subscribersList: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_FRIEND: {\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: true }\n                    }\n                    return u\n                })\n            }\n        }\n        case DELETE_FRIEND: {\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: false }\n                    }\n                    return u\n                })\n            }\n        }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: action.users\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n        case SET_TOTAL_COUNT: {\n            return {\n                ...state,\n                totalCount: action.totalCount\n            }\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case TOGGLE_IS_WAIT_SUBSCRIBE: {\n            return {\n                ...state,\n                subscribersList: action.isFetching ?\n                    [...state.subscribersList, action.userId] :\n                    state.subscribersList.filter(id => {\n                        return id != action.userId\n                    })\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport const acceptAddFriend = (userId) => {\n    return {\n        type: ADD_FRIEND,\n        userId\n    }\n}\n\nexport const acceptDeleteFriend = (userId) => {\n    return {\n        type: DELETE_FRIEND,\n        userId\n    }\n}\n\nexport const setUsers = (users) => {\n    return {\n        type: SET_USERS,\n        users\n    }\n}\n\nexport const setCurrentPage = (currentPage) => {\n    return {\n        type: SET_CURRENT_PAGE,\n        currentPage\n    }\n}\n\nexport const setTotalCount = (totalCount) => {\n    return {\n        type: SET_TOTAL_COUNT,\n        totalCount\n    }\n}\n\nexport const setToggleIsFetching = (isFetching) => {\n    return {\n        type: TOGGLE_IS_FETCHING,\n        isFetching\n    }\n}\n\nexport const setWaitIsSubscribe = (isFetching, userId) => {\n    return {\n        type: TOGGLE_IS_WAIT_SUBSCRIBE,\n        isFetching,\n        userId\n    }\n}\n\nexport const getUsersThunk = (currentPage, pageSize) => {\n    return (dispatch) => {\n        dispatch(setToggleIsFetching(true));\n\n        usersAPI.getUsers(currentPage, pageSize)\n            .then(data => {\n                dispatch(setToggleIsFetching(false));\n                dispatch(setUsers(data.items));\n                dispatch(setTotalCount(data.totalCount));\n                dispatch(setCurrentPage(currentPage))\n            })\n    }\n}\n\nexport const deleteFriendThunk = (userId) => {\n\n    return (dispatch) => {\n        dispatch(setWaitIsSubscribe(true, userId))\n        usersAPI.deleteFriend(userId).then(data => {\n            if (data.resultCode == 0) {\n                dispatch(acceptDeleteFriend(userId))\n            }\n            dispatch(setWaitIsSubscribe(false, userId))\n        })\n    }\n}\n\nexport const addFriendThunk = (userId) => {\n\n    return (dispatch) => {\n        dispatch(setWaitIsSubscribe(true, userId))\n        usersAPI.addFriend(userId).then(data => {\n            if (data.resultCode == 0) {\n                dispatch(acceptAddFriend(userId))\n            }\n            dispatch(setWaitIsSubscribe(false, userId))\n        })\n    }\n}\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}