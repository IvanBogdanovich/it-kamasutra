{"version":3,"sources":["state/dialogs/types.js","hoc/withAuthRedirect.jsx","assets/images/preloader.svg","components/common/Preloader/Preloader.module.css","assets/images/yarn-logo.png","components/Login/Login.module.css","components/Footer/Footer.module.css","components/common/validators/validators.js","utils/defineActionTypes.js","utils/api.js","components/Sidebar/Sidebar.module.css","state/dialogs/index.js","state/profile/types.js","state/profile/index.js","state/users/index.js","state/auth/types.js","state/auth/index.js","state/app/types.js","state/app/index.js","redux/redux-store.js","serviceWorker.js","state/auth/api.js","state/auth/actions.js","components/Header/Header.jsx","components/Sidebar/Sidebar.jsx","state/profile/actions.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/Form/Form.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Status/Status.jsx","components/Profile/Info/Info.jsx","components/Profile/Profile.jsx","components/Login/Form/Form.jsx","components/Login/Login.jsx","components/Footer/Footer.jsx","App.js","state/app/actions.js","index.js","state/users/types.js","components/Login/Form/Form.module.css","components/common/form-controls/form-controls.js","components/common/Preloader/Preloader.jsx","state/profile/api.js","components/Header/Header.module.css","components/common/form-controls/form-controls.module.css","components/Profile/Form/Form.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Info/Info.module.css"],"names":["defineActionTypes","mapStateToPropsForRedirect","state","isAuth","auth","WithAuthRedirect","Component","RenderComponent","this","props","to","React","connect","module","exports","required","value","maxLengthCreator","max","length","minLengthCreator","min","nameSpace","actionTypesNames","actionTypes","forEach","name","instanceAxios","axios","baseURL","timeout","withCredentials","headers","initialState","messagesData","message","postData","desc","likesCounter","profile","status","users","totalCount","pageSize","currentPage","isFetching","subscribersList","login","email","userId","captcha","initialized","reducers","combineReducers","dialogs","action","type","types","ADD_MESSAGE_DIALOGS","ADD_MESSAGE_PROFILE","SET_PROFILE_USER","SET_STATUS","ADD_FRIEND","map","u","id","followed","DELETE_FRIEND","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_WAIT_SUBSCRIBE","filter","SET_AUTH_DATA_USER","GET_CAPTCHA_SUCCESS","data","form","formReducer","app","INITIALIZED_SUCCESS","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","ReduxThunk","store","createStore","__store__","Boolean","location","hostname","match","authMeAPI","get","response","Error","password","rememberMe","post","delete","securityAPI","setAuthUserData","getCaptchaSuccess","getMeThunk","dispatch","a","resultCode","Header","className","useDispatch","useSelector","cn","styles","Root","src","logo","alt","Logo","button","onClick","defaultProps","Sidebar","nav","item","activeClassName","active","prototypes","PropTypes","string","setStatus","Post","like","maxLength15","minLength2","FormPosts","handleSubmit","onSubmit","Field","textarea","component","Textarea","placeholder","validate","FormPostsRedux","reduxForm","MyPosts","posts","postItems","useMemo","p","i","key","list","Form","Status","useState","editMode","setEditMode","statusLocal","useEffect","onDoubleClick","autoFocus","onBlur","profileAPI","updateStatus","updateStatusThunk","onChange","e","target","Info","user","img","photos","large","withRouter","autorizedUserId","handleUserId","useCallback","params","getProfile","getProfileThunk","getUserStatus","getUserStatusThunk","Preloader","maxLength100","minLength5","LoginForm","error","captchaUrl","Input","field","checkbox","errorNote","FormLoginRedux","Login","formData","url","messages","stopSubmit","_error","Footer","role","Dialogs","lazy","Users","exact","path","render","fallback","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","FormControl","input","meta","child","hasError","touched","children","restProps","preloader","preloaderImg","put"],"mappings":"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","file":"static/js/main.350a034a.chunk.js","sourcesContent":["import defineActionTypes from '../../utils/defineActionTypes';\n\nexport default defineActionTypes('dialogs', [\n    'ADD_MESSAGE_DIALOGS',\n])\n","\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const WithAuthRedirect = (Component) => {\n    class RenderComponent extends React.Component {\n\n        render() {\n\n            if(!this.props.isAuth) {\n                return <Redirect to='login'/>\n            }\n\n            return <Component {...this.props}/>\n        }\n    }\n\n    const ConnectedAuthRedirected = connect(mapStateToPropsForRedirect)(RenderComponent);\n\n    return ConnectedAuthRedirected;\n}\n","module.exports = __webpack_public_path__ + \"static/media/preloader.dba557f3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2dvkO\"};","module.exports = __webpack_public_path__ + \"static/media/yarn-logo.69f65a80.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"Login_Root__7sNQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"Footer_Root__3ret4\"};","export const required = (value) => {\n    if (value) return undefined;\n\n    return 'Field is required'\n}\n\nexport const maxLengthCreator = (max) => (value) => {\n    if (value && value.length > max) {\n        return `Must be ${max} characters or less`\n    }\n\n    return undefined\n}\n\nexport const minLengthCreator = (min) => (value) => {\n    if (value && value.length < min) {\n        return `Must be ${min} characters minimum`\n    }\n\n    return undefined\n}\n","const prefix = '@';\nconst divider = '/';\n\n// define actions types\nexport default (nameSpace, actionTypesNames) => {\n    const actionTypes = {};\n\n    actionTypesNames.forEach((name) => {\n        actionTypes[name] = prefix + nameSpace + divider + name;\n    });\n\n    return actionTypes;\n}\n","//  docs api\n//  https://social-network.samuraijs.com/docs\n\nimport * as axios from 'axios';\n\nexport const instanceAxios = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    timeout: 5000000,\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": \"e6cfdfa9-e06f-48fb-8abd-0a53de2d8b83\"\n    }\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"Sidebar_Root__24TLk\",\"item\":\"Sidebar_item__3zPF1\",\"active\":\"Sidebar_active__37KeR\",\"nav\":\"Sidebar_nav__i8Lo5\"};","// types\nimport types from './types';\n\n// initial state\nlet initialState = {\n    messagesData: [\n        { message: 'YO YO YO' },\n        { message: 'URA URA URA' },\n        { message: 'Mother Fuck' }\n    ]\n}\n\nexport default function reducer(state = initialState, action) {\n\n    switch (action.type) {\n\n        case types.ADD_MESSAGE_DIALOGS: {\n            return {\n                ...state,\n                messagesData: [...state.messagesData, { message: action.message }]\n            }\n        }\n\n        default:\n            return state\n    }\n}\n","import defineActionTypes from '../../utils/defineActionTypes';\n\nexport default defineActionTypes('profile', [\n    'ADD_MESSAGE_PROFILE',\n    'SET_PROFILE_USER',\n    'SET_STATUS',\n])\n","\n// types\nimport types from './types';\n\n// initial state\nlet initialState = {\n    postData: [\n        { desc: 'Yo Yo mushiki', likesCounter: 23 },\n        { desc: 'It\\'s second first', likesCounter: 5 }\n    ],\n    profile: null,\n    status: ''\n}\n\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n\n        case types.ADD_MESSAGE_PROFILE: {\n            return {\n                ...state,\n                postData: [...state.postData, { desc: action.message, likesCounter: 12 }],\n            }\n        }\n\n        case types.SET_PROFILE_USER: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n\n        case types.SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n\n        default:\n            return state\n    }\n}\n","// types\nimport types from './types';\n\n// initial state\nconst initialState = {\n    users: [],\n    totalCount: 21,\n    pageSize: 100,\n    currentPage: 1,\n    isFetching: false,\n    subscribersList: []\n}\n\n// reducer\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case types.ADD_FRIEND: {\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: true }\n                    }\n                    return u\n                })\n            }\n        }\n\n        case types.DELETE_FRIEND: {\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return { ...u, followed: false }\n                    }\n                    return u\n                })\n            }\n        }\n\n        case types.SET_USERS: {\n            return {\n                ...state,\n                users: action.users\n            }\n        }\n\n        case types.SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n\n        case types.SET_TOTAL_COUNT: {\n            return {\n                ...state,\n                totalCount: action.totalCount\n            }\n        }\n\n        case types.TOGGLE_IS_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n\n        case types.TOGGLE_IS_WAIT_SUBSCRIBE: {\n            return {\n                ...state,\n                subscribersList: action.isFetching ?\n                    [...state.subscribersList, action.userId] :\n                    state.subscribersList.filter(id => {\n                        return id !== action.userId\n                    })\n            }\n        }\n\n        default:\n            return state\n    }\n}\n","import defineActionTypes from '../../utils/defineActionTypes';\n\nexport default defineActionTypes('auth', [\n    'SET_AUTH_DATA_USER',\n    'GET_CAPTCHA_SUCCESS',\n])","// types\nimport types from './types';\n\n// initial state\nconst initialState = {\n    login: null,\n    email: null,\n    userId: null,\n    isAuth: false,\n    captcha: null,\n}\n\n// reducer\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case types.SET_AUTH_DATA_USER:\n        case types.GET_CAPTCHA_SUCCESS: {\n            return {\n                ...state,\n                ...action.data\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}\n","import defineActionTypes from '../../utils/defineActionTypes';\n\nexport default defineActionTypes('app', [\n    'INITIALIZED_SUCCESS'\n])\n","// types\nimport types from './types';\n\n// initial state\nconst initialState = {\n    initialized: false,\n}\n\n// reducer\nexport default function reducer(state = initialState, action) {\n    switch (action.type) {\n        case types.INITIALIZED_SUCCESS :{\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}\n","import { createStore, combineReducers, applyMiddleware , compose} from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\n\n// reducers\nimport dialogs from '../state/dialogs/';\nimport profile from '../state/profile/';\nimport users from '../state/users/';\nimport auth from '../state/auth/';\nimport app from '../state/app/';\n\nconst reducers = combineReducers({\n    dialogs: dialogs,\n    profile: profile,\n    users: users,\n    auth: auth,\n    form: formReducer,\n    app: app,\n})\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nconst enhancer = composeEnhancers(\n    applyMiddleware(ReduxThunk),\n);\n\nconst store = createStore(reducers, enhancer);\n\nwindow.__store__ = store;\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// api\nimport { instanceAxios } from '../../utils/api';\n\nexport const authMeAPI = {\n    async getAuthMe() {\n        try {\n            const response = await instanceAxios.get('/auth/me');\n            return response.data;\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    },\n\n    async login(email, password, rememberMe, captcha ) {\n        try {\n            const response = await instanceAxios.post('/auth/login', {\n                email: email,\n                password: password,\n                rememberMe: rememberMe,\n                captcha: captcha })\n\n            return response.data\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    },\n\n    async loginOut() {\n        try {\n            const response = await instanceAxios.delete('/auth/login');\n\n            return response.data;\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n\nexport const securityAPI = {\n    async getCaptcha() {\n        try {\n            const response = await instanceAxios.get('/security/get-captcha-url');\n\n            return response.data;\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    },\n}\n","// api\nimport { authMeAPI, securityAPI } from './api';\n\n// actions\nimport { stopSubmit } from 'redux-form';\n\n// types\nimport types from './types';\n\nexport function setAuthUserData(login, email, userId, isAuth) {\n    return {\n        type: types.SET_AUTH_DATA_USER,\n        data: {\n            login,\n            email,\n            userId,\n            isAuth\n        }\n    }\n}\n\nexport function getCaptchaSuccess(captcha) {\n    return {\n        type: types.GET_CAPTCHA_SUCCESS,\n        data: {\n            captcha\n        }\n    }\n}\n\nexport function getMeThunk() {\n    return async dispatch => {\n        try {\n            const response = await authMeAPI.getAuthMe();\n            if (response.resultCode === 0) {\n                const { login, email, id, } = response.data;\n                dispatch(setAuthUserData(login, email, id, true));\n            }\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n\nexport function loginThunk(email, password, rememberMe, captcha) {\n    return async dispatch => {\n        try {\n            const response = await authMeAPI.login(email, password, rememberMe, captcha);\n            if (response.resultCode === 0) {\n                dispatch(getMeThunk());\n            } else if (response.resultCode === 10) {\n                dispatch(getCaptchaThunk());\n            }\n            else {\n                const message = response.messages\n                dispatch(stopSubmit('formLogin', {_error: message ? message : 'some wrong' }));\n            }\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n\nexport function loginOutThunk() {\n    return async dispatch => {\n        try {\n            const response = await authMeAPI.loginOut();\n            if (response.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false));\n            }\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n\nexport function getCaptchaThunk() {\n    return async dispatch => {\n        try {\n            const response = await securityAPI.getCaptcha();\n            const captchaUrl = response.url;\n            dispatch(getCaptchaSuccess(captchaUrl));\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\n// actions\nimport { loginOutThunk } from '../../state/auth/actions';\n\n// pic\nimport logo from '../../assets/images/yarn-logo.png';\n\nimport styles from './Header.module.css';\n\nfunction Header({ className }) {\n    const dispatch = useDispatch();\n    const isAuth = useSelector(state => state.auth.isAuth);\n    const login = useSelector(state => state.auth.login);\n\n    const loginOut = () => {\n        dispatch(loginOutThunk());\n    }\n\n    return (\n        <header className={cn(styles.Root, className)}>\n            <img src={logo} alt=\"Логотип ярна\" className={cn(styles.Logo)} />\n\n            {isAuth ?\n                <div>\n                    <div>{login}</div>\n                    <button className={cn(styles.button)} onClick={loginOut}>Вылогиниться</button>\n                </div> :\n\n                <NavLink to=\"/login\">\n                    Login\n                </NavLink>\n            }\n        </header>\n    );\n}\n\nHeader.propTypes = {\n    className: PropTypes.string,\n};\n\nHeader.defaultProps = {\n    className: '',\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nimport styles from './Sidebar.module.css';\n\nfunction Sidebar({ className }) {\n    return (\n        <aside className={cn(styles.Root, className)}>\n            <nav className={styles.nav}>\n                <ul>\n                    <li>\n                        <NavLink\n                                to=\"/profile\"\n                                className={styles.item}\n                                activeClassName={styles.active}>\n                                    Profile\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink\n                                to=\"/dialogs\"\n                                className={styles.item}\n                                activeClassName={styles.active}>\n                                    Messages\n                        </NavLink>\n                    </li>\n                    <li>\n                        <NavLink\n                                to=\"/users\"\n                                className={styles.item}\n                                activeClassName={styles.active}>\n                                    Users\n                        </NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </aside>\n    );\n}\n\nSidebar.prototypes = {\n    className: PropTypes.string,\n}\n\nSidebar.defaultProps = {\n    className: '',\n}\n\nexport default Sidebar;\n","// api\nimport { profileAPI } from './api';\n\n// types\nimport types from './types';\n\nexport function addMessage(message) {\n    return {\n        type: types.ADD_MESSAGE_PROFILE,\n        message: message\n    }\n}\n\nexport function setProfileUser(profile) {\n    return {\n        type: types.SET_PROFILE_USER,\n        profile\n    }\n}\n\nexport function setStatus (status) {\n    return {\n        type: types.SET_STATUS,\n        status\n    }\n}\n\nexport function getProfileThunk (userId) {\n    return async dispatch => {\n        try {\n            const response = await profileAPI.getProfile(userId);\n            dispatch(setProfileUser(response));\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n\nexport function getUserStatusThunk(userId) {\n    return async dispatch => {\n        try {\n            const response = await profileAPI.getUserStatus(userId);\n            dispatch(setStatus(response.data));\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n\nexport function updateStatusThunk(status) {\n    return async dispatch => {\n        try {\n            const response = await profileAPI.updateStatus(status);\n            if (response.resultCode === 0) {\n                dispatch(setStatus(status));\n            }\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n","import React from 'react';\n\nimport styles from './Post.module.css';\n\nfunction Post(props) {\n    return (\n        <li className={styles.post}>\n            <img src=\"http://lgz.ru/upload/iblock/90c/90c034bff06d9e983769a8d2ede36a3c.jpg\" alt=\"\" />\n            <span className={styles.like}>{props.likesCounter}</span>\n            <span>{props.desc}</span>\n        </li>\n    )\n}\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { Field, reduxForm } from 'redux-form';\n\n// validators\nimport { required,\n    maxLengthCreator,\n    minLengthCreator\n} from '../../common/validators/validators';\n\n// components\nimport { Textarea } from '../../common/form-controls/form-controls';\n\nimport styles from './Form.module.css'\n\nconst maxLength15 = maxLengthCreator(15);\nconst minLength2 = minLengthCreator(2);\n\nfunction FormPosts({className, handleSubmit}) {\n    return (\n        <form className={cn(styles.Root, className)} onSubmit={handleSubmit}>\n            <Field\n                name=\"message\"\n                className={styles.textarea}\n                component={Textarea}\n                placeholder=\"your news\"\n                validate={[required, maxLength15, minLength2]}\n            />\n\n            <button className={styles.button}>Опубликовать</button>\n        </form>\n    )\n}\n\nconst FormPostsRedux = reduxForm({\n    form: 'formPosts'\n})(FormPosts);\n\nFormPosts.propTypes = {\n    className: PropTypes.string,\n    handleSubmit: PropTypes.func,\n};\n\nFormPosts.defaultProps = {\n    className: '',\n    handleSubmit: () => {},\n};\n\nexport default FormPostsRedux;\n","\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Post from './Post/Post';\n\n// components\nimport FormPostsRedux from '../Form/Form';\n\n// actions\nimport { addMessage } from '../../../state/profile/actions';\n\nimport styles from './MyPosts.module.css';\n\nfunction MyPosts({ className }) {\n    const posts = useSelector(state => state.profile.postData);\n    const dispatch = useDispatch();\n\n    const postItems = useMemo(() =>\n        posts.map((p, i) => {\n            return <Post desc={p.desc} likesCounter={p.likesCounter} key={i} />\n        })\n    , [posts]);\n\n    const sendMessage = (value) => {\n        dispatch(addMessage(value.message));\n    }\n\n    return (\n        <div className={cn(styles.Root, className)}>\n            <h2>Компонента MyPosts</h2>\n\n            <div className=\"posts\">\n                <ul className={styles.list}>\n                    {postItems}\n                </ul>\n\n                <FormPostsRedux onSubmit={sendMessage} />\n            </div>\n        </div>\n    )\n}\n\nMyPosts.propTypes= {\n    className: PropTypes.string,\n}\n\nMyPosts.defaultProps= {\n    className: '',\n}\n\nexport default MyPosts;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\n// actions\nimport { updateStatusThunk } from '../../../state/profile/actions';\n\nfunction Status({ status }) {\n    const dispatch = useDispatch();\n\n    const [editMode, setEditMode] = useState(false);\n    const [statusLocal, setStatus] = useState(status);\n\n    useEffect(() => {\n        setStatus(status)\n    }, [status])\n\n    const onChange = (e) => {\n        setStatus(e.target.value)\n    }\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deActivateEditMode = () => {\n        setEditMode(false);\n        dispatch(updateStatusThunk(statusLocal));\n    }\n\n    return <div>\n\n        {!editMode &&\n            <span onDoubleClick={activateEditMode}>\n                {status || \"-----\"}</span>\n        }\n        {editMode &&\n            <input autoFocus={true}\n                onBlur={deActivateEditMode}\n                value={statusLocal}\n                onChange={onChange} />\n        }\n    </div>\n}\n\nexport default Status;\n","import React from 'react';\n\n// components\nimport Status from '../Status/Status';\n\nimport styles from './Info.module.css';\n\nfunction Info({ profile, status }) {\n\n    return (\n        <>\n            <div className={styles.user}>\n                <img className={styles.img} src={profile.photos.large} alt=\"\"/>\n\n                <Status status={status} />\n            </div>\n        </>\n    )\n}\n\nexport default Info;\n","import React, { useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\n// hoc\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect';\n\n// actions\nimport {\n    getProfileThunk,\n    getUserStatusThunk\n} from '../../state/profile/actions';\n\n// components\nimport Preloader from '../common/Preloader/Preloader';\nimport MyPosts from './MyPosts/MyPosts';\nimport Info from './Info/Info';\n\nfunction Profile({ match }) {\n    const dispatch = useDispatch();\n    const autorizedUserId = useSelector(state => state.auth.userId);\n    const profile = useSelector(state => state.profile.profile);\n    const status = useSelector(state => state.profile.status);\n\n    const handleUserId = useCallback(() => {\n        let userId = match.params.userId;\n\n        if (!userId) {\n            userId = autorizedUserId;\n        }\n\n        dispatch(getProfileThunk(userId));\n        dispatch(getUserStatusThunk(userId));\n    }, [autorizedUserId, dispatch, match.params.userId])\n\n    useEffect(() => {\n        handleUserId();\n\n        return handleUserId();\n    }, [handleUserId]);\n\n    if(!profile) {\n        return <Preloader />\n    }\n\n    return (\n        <div>\n            <Info profile={profile} status={status} />\n\n            <MyPosts />\n        </div>\n    )\n}\n\nProfile.propTypes = {\n    match: PropTypes.object.isRequired,\n}\n\nexport default compose(\n    withRouter,\n    WithAuthRedirect\n)(Profile);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { Field, reduxForm } from 'redux-form';\n\n// components\nimport { Input } from '../../common/form-controls/form-controls';\n\n// validators\nimport {\n    required,\n    maxLengthCreator,\n    minLengthCreator\n} from '../../common/validators/validators';\n\nimport styles from './Form.module.css';\n\nconst maxLength100 = maxLengthCreator(100);\nconst minLength5 = minLengthCreator(5);\n\nfunction LoginForm({ className, handleSubmit, error, captchaUrl }) {\n    return (\n        <form className={cn(styles.Root, className)} onSubmit={handleSubmit}>\n            <Field component={Input}\n                name=\"email\"\n                placeholder=\"Введите email\"\n                type=\"email\"\n                className={cn(styles.field)}\n                validate={[required, maxLength100, minLength5]}>\n            </Field>\n\n            <Field component={Input}\n                name=\"password\"\n                placeholder=\"Введите пароль\"\n                type=\"password\"\n                className={cn(styles.field)}\n                validate={[required, maxLength100, minLength5]}>\n            </Field>\n\n            <Field component={Input}\n                name=\"rememberMe\"\n                type=\"checkbox\"\n                className={cn(styles.checkbox)}\n                validate={[required, maxLength100, minLength5]}>\n            </Field>\n\n            {error && <span className={cn(styles.errorNote)}>{error}</span>}\n            {captchaUrl &&\n                <>\n                    <img src={captchaUrl} alt=\"Капча\" />\n\n                    <Field component={Input}\n                        name=\"captcha\"\n                        placeholder=\"Введите капчу\"\n                        type=\"text\"\n                        className={cn(styles.field)}\n                        validate={[required]}>\n                    </Field>\n                </>\n            }\n            <button className={cn(styles.button)}>Зарегаться</button>\n        </form>\n    )\n}\n\nconst FormLoginRedux = reduxForm({\n    form: 'formLogin'\n})(LoginForm);\n\nLoginForm.propTypes = {\n    className: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n}\n\nLoginForm.defaultProps = {\n    className: '',\n}\n\nexport default FormLoginRedux;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n// actions\nimport { loginThunk } from '../../state/auth/actions';\n\n// components\nimport FormLoginRedux from './Form';\n\nimport styles from './Login.module.css';\n\nfunction Login({ className }) {\n    const isAuth = useSelector(state => state.auth.isAuth);\n    const captchaUrl = useSelector(state => state.auth.captcha);\n    const dispatch = useDispatch();\n\n    const onSubmit = (formData) => {\n        dispatch(loginThunk(formData.email, formData.password, formData.rememberMe, formData.captcha));\n    }\n\n    if (isAuth) {\n        return <Redirect to=\"/profile\" />\n    }\n\n    return (\n        <div className={cn(styles.Root, className)}>\n            <h1>Это логин</h1>\n\n            <FormLoginRedux captchaUrl={captchaUrl} onSubmit={onSubmit} />\n        </div>\n    )\n}\n\nLogin.propTypes = {\n    className: PropTypes.string,\n}\n\nLogin.defaultProps = {\n    className: '',\n}\n\nexport default Login;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport styles from './Footer.module.css';\n\nfunction Footer({ className }) {\n    return (\n        <footer className={cn(styles.Root, className)} role=\"contentinfo\">\n            <h4>Главное – кайфовать по жизни</h4>\n        </footer>\n    )\n}\n\nFooter.propTypes = {\n    className: PropTypes.string,\n}\n\nFooter.defaultProps = {\n    className: '',\n}\n\nexport default Footer;","import React, { useEffect, lazy, Suspense } from 'react';\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { compose } from 'redux';\n\n// actions\nimport { getInitializeThunk } from '../src/state/app/actions';\n\n// components\nimport Preloader from './components/common/Preloader';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Profile from './components/Profile';\nimport Login from './components/Login';\nimport Footer from './components/Footer';\n\nimport './App.css';\n\n// lazyload components\nconst Dialogs = lazy(() => import('./components/Dialogs'));\nconst Users = lazy(() => import('./components/Users'));\n\nfunction App() {\n    const dispatch = useDispatch();\n    const initialized = useSelector(state => state.app.initialized);\n\n    useEffect(() => {\n        dispatch(getInitializeThunk());\n    }, [dispatch])\n\n    if (!initialized) {\n        return <Preloader />\n    }\n\n    return (\n        <div className=\"container\">\n            <Header />\n            <Sidebar />\n\n            <div className=\"content\">\n                <Switch>\n                    {<Route exact path=\"/\" render={() => {\n                        return <Redirect to={\"/profile\"} />\n                    }} />}\n\n                    {<Route path=\"/profile/:userId?\" render={() => {\n                        return <Profile />\n                    }} />}\n\n                    <Route path=\"/dialogs\" render={() => {\n                        return <Suspense fallback={<div>Loading...</div>}>\n                            <Dialogs />\n                        </Suspense>\n                    }} />\n\n                    <Route path=\"/users\" render={() => {\n                        return <Suspense fallback={<div>Loading...</div>}>\n                            <Users />\n                        </Suspense>\n                    }} />\n\n                    <Route path=\"/login\" render={() => {\n                        return <Login />\n                    }} />\n\n                    <Route path=\"*\" render={() => {\n                        return <div>404 page</div>\n                    }} />\n                </Switch>\n            </div>\n\n            <Footer />\n        </div>\n    )\n}\n\nexport default compose(withRouter)(App);\n","// actions\nimport { getMeThunk } from '../auth/actions';\n\n// types\nimport types from './types';\n\nexport function initializedSuccess() {\n    return { type: types.INITIALIZED_SUCCESS }\n}\n\nexport function getInitializeThunk() {\n    return async dispatch => {\n        try {\n            await dispatch(getMeThunk());\n            dispatch(initializedSuccess());\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider} from 'react-redux';\nimport store from './redux/redux-store.js';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </HashRouter>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import defineActionTypes from '../../utils/defineActionTypes';\n\nexport default defineActionTypes('users', [\n    'ADD_FRIEND',\n    'DELETE_FRIEND',\n    'SET_USERS',\n    'SET_CURRENT_PAGE',\n    'SET_TOTAL_COUNT',\n    'TOGGLE_IS_FETCHING',\n    'TOGGLE_IS_WAIT_SUBSCRIBE',\n])\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1I3rN\",\"field\":\"Form_field__2RXHo\",\"button\":\"Form_button__3Ybfv\",\"checkbox\":\"Form_checkbox__2fA1r\",\"errorNote\":\"Form_errorNote__1yRIL\"};","import React from 'react';\n\nimport styles from './form-controls.module.css';\n\nfunction FormControl({ input, meta, child, ...props }) {\n    const hasError = meta.touched && meta.error;\n\n    return (<div>\n        <div className={styles.field + ' ' + (hasError ? styles.error : '')}>\n            {props.children}\n            { hasError && <span className={styles.errorNote}>{meta.error}</span>}\n        </div>\n    </div>\n)}\n\nexport const Textarea = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props}>\n        <textarea {...input} {...restProps} />\n    </FormControl>\n}\n\nexport const Input = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props}>\n        <input {...input} {...restProps} />\n    </FormControl>\n}\n","import React from 'react';\n\n// pic\nimport preloaderImg from '../../../assets/images/preloader.svg';\n\nimport styles from './Preloader.module.css';\n\nfunction Preloader() {\n    return <div className={styles.preloader}>\n        <img src={preloaderImg} alt=\"\" />\n    </div>\n}\n\nexport default Preloader;\n","// api\nimport { instanceAxios } from '../../utils/api';\n\nexport const profileAPI = {\n    async getProfile(userId) {\n        try {\n            const response = await instanceAxios.get(`profile/${userId}`);\n\n            return response.data;\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    },\n\n    async getUserStatus(userId) {\n        try {\n            const response = await instanceAxios.get(`profile/status/${userId}`);\n\n            return response;\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    },\n\n    async updateStatus(status) {\n        try {\n            const response = await instanceAxios.put(`profile/status/`, { status: status });\n\n            return response;\n        }\n        catch(e) {\n            throw new Error(e);\n        }\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"Header_Root__3ibnh\",\"Logo\":\"Header_Logo__18l3V\",\"button\":\"Header_button__3kSo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"form-controls_field__2CK-K\",\"error\":\"form-controls_error__39FlB\",\"errorNote\":\"form-controls_errorNote__3emyq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"Form_Root__1A2Fd\",\"textarea\":\"Form_textarea__3G5nV\",\"button\":\"Form_button__22R6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\",\"like\":\"Post_like__oViQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"MyPosts_Root__1Lkm_\",\"list\":\"MyPosts_list__3CHZW\",\"title\":\"MyPosts_title__3q_Ko\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Info_user__1KoZv\",\"img\":\"Info_img__3cduJ\",\"bg\":\"Info_bg__26z4j\"};"],"sourceRoot":""}