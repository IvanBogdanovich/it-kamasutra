{"version":3,"sources":["components/Dialogs/Form/Form.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Form/Form.jsx","components/Dialogs/Dialogs.jsx","state/dialogs/actions.js","components/Dialogs/index.js"],"names":["module","exports","maxLength15","maxLengthCreator","minLength2","minLengthCreator","FormDialogs","className","handleSubmit","cn","styles","Root","onSubmit","Field","component","Textarea","placeholder","name","validate","required","button","FormDialogsRedux","reduxForm","form","defaultProps","Dialogs","dispatch","useDispatch","messagesDefault","useSelector","state","dialogs","messagesData","title","wrap","map","m","i","text","key","message","Form","value","type","types","ADD_MESSAGE_DIALOGS","compose","WithAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,uB,oBCArDD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,QAAU,yBAAyB,KAAO,sBAAsB,KAAO,wB,qKCelHC,EAAcC,YAAiB,IAC/BC,EAAaC,YAAiB,GAEpC,SAASC,EAAT,GAAmD,IAA5BC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,aAC9B,OACI,0BAAMD,UAAWE,IAAGC,IAAOC,KAAMJ,GAAYK,SAAUJ,GACnD,kBAACK,EAAA,EAAD,CACIC,UAAWC,IACXC,YAAY,oBACZC,KAAK,UACLC,SAAU,CAACC,IAAUjB,EAAaE,KAGtC,4BAAQG,UAAWE,IAAGC,IAAOU,SAA7B,gBAKZ,IAAMC,EAAmBC,YAAU,CAC/BC,KAAM,eADeD,CAEtBhB,GAOHA,EAAYkB,aAAe,CACvBjB,UAAW,GACXC,aAAc,cAGHa,Q,kBC/Bf,SAASI,EAAT,GAAiC,IAAdlB,EAAa,EAAbA,UACTmB,EAAWC,cACXC,EAAkBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,gBAM3D,OACI,yBAAKzB,UAAWE,IAAGC,IAAOC,KAAMJ,IAC5B,wBAAIA,UAAWE,IAAGC,IAAOuB,QAAzB,8CAEA,yBAAK1B,UAAWE,IAAGC,IAAOqB,UACtB,yBAAKxB,UAAWE,IAAGC,IAAOwB,OACrBN,EAAgBO,KAAI,SAACC,EAAGC,GAAJ,OACjB,uBAAG9B,UAAWE,IAAGC,IAAO4B,MAAOC,IAAKF,GAAID,EAAEI,YAG9C,kBAACC,EAAD,CAAkB7B,SAdd,SAAC8B,GClBlB,IAAoBF,EDmBnBd,GCnBmBc,EDmBCE,EAAMF,QClBvB,CACHG,KAAMC,IAAMC,oBACZL,QAASA,WDwCjBf,EAAQD,aAAe,CACnBjB,UAAW,IAGAuC,kBACXC,IADWD,CAEbrB,GEpDF","file":"static/js/4.55d52ae1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Root\":\"Form_Root__7GCS5\",\"button\":\"Form_button__1JvgE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Dialogs_title__3VCIA\",\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"wrap\":\"Dialogs_wrap__3fA78\",\"text\":\"Dialogs_text__3t8TD\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { Field, reduxForm } from 'redux-form';\n\n// components\nimport { Textarea } from '../../common/form-controls/form-controls';\n\n// validators\nimport { required,\n    maxLengthCreator,\n    minLengthCreator }\nfrom '../../common/validators/validators';\n\nimport styles from './Form.module.css';\n\nconst maxLength15 = maxLengthCreator(15);\nconst minLength2 = minLengthCreator(2);\n\nfunction FormDialogs({ className, handleSubmit }) {\n    return (\n        <form className={cn(styles.Root, className)} onSubmit={handleSubmit}>\n            <Field\n                component={Textarea}\n                placeholder=\"tell me about you\"\n                name=\"message\"\n                validate={[required, maxLength15, minLength2]}\n            />\n\n            <button className={cn(styles.button)}>add message</button>\n        </form>\n    )\n}\n\nconst FormDialogsRedux = reduxForm({\n    form: 'formDialogs'\n})(FormDialogs);\n\nFormDialogs.propTypes = {\n    className: PropTypes.string,\n    handleSubmit: PropTypes.func,\n};\n\nFormDialogs.defaultProps = {\n    className: '',\n    handleSubmit: () => {},\n};\n\nexport default FormDialogsRedux;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { compose } from 'redux';\n\n// hoc\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect';\n\n// actions\nimport { addMessage } from '../../state/dialogs/actions';\n\n// components\nimport FormDialogsRedux from './Form';\n\nimport styles from './Dialogs.module.css';\n\nfunction Dialogs({ className }) {\n    const dispatch = useDispatch();\n    const messagesDefault = useSelector(state => state.dialogs.messagesData);\n\n    const sendMessage = (value) => {\n        dispatch(addMessage(value.message));\n    }\n\n    return (\n        <div className={cn(styles.Root, className)}>\n            <h1 className={cn(styles.title)}>Диалоги</h1>\n\n            <div className={cn(styles.dialogs)}>\n                <div className={cn(styles.wrap)}>\n                    {messagesDefault.map((m, i) => (\n                        <p className={cn(styles.text)} key={i}>{m.message}</p>\n                    ))}\n\n                    <FormDialogsRedux onSubmit={sendMessage} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nDialogs.propTypes = {\n    className: PropTypes.string,\n};\n\nDialogs.defaultProps = {\n    className: '',\n};\n\nexport default compose(\n    WithAuthRedirect\n)(Dialogs);\n","// types\nimport types from './types';\n\nexport function addMessage(message) {\n    return {\n        type: types.ADD_MESSAGE_DIALOGS,\n        message: message\n    }\n}","export { default } from './Dialogs';\n"],"sourceRoot":""}